{"version":3,"sources":["App.module.css","AppContext.js","component/SoundContext.js","component/ExerciseScreen.js","component/Field.js","component/SetupScreen.js","component/SummaryScreen.js","App.js","index.js"],"names":["module","exports","AppContext","createContext","AppContextProvider","children","useState","config","localStorage","getItem","length","JSON","parse","studentName","totalSums","totalQuestions","pauseBetweenQuestionInMs","setConfig","page","setPage","getSession","sessions","useEffect","sessionTimer","useRef","Provider","value","saveSettings","setItem","stringify","window","location","reload","saveSession","questions","answers","sessionDuration","Date","getTime","current","sums","map","answer","index","session","date","duration","push","markSessionBegin","useAppContext","useContext","SoundContext","numberTimeline","SoundContextProvider","soundRef","load","pause","playSounds","numbers","delayInMiliseconds","undefined","forEach","number","setTimeout","startingTime","toString","currentTime","play","style","display","justifyContent","width","position","textAlign","paddingTop","ref","preload","src","process","type","useSound","generateRandomNumber","result","total","reduce","ac","next","shouldBeNegative","Math","random","nextCandidate","floor","abs","generateQuestionArray","ClickToStart","setSessionRunning","margin","marginTop","padding","background","marginBottom","className","styles","button","onClick","AnswerForm","setTimerRunning","setCurrentQuestion","setCurrentSum","setAnswers","isTrial","currentSum","questionSet","answerRef","timeLogger","focus","flexDirection","action","onSubmit","e","preventDefault","parseInt","target","elements","val","time","handleSubmit","alignItems","fontSize","flexGrow","input","name","QuestionPanel","questionSets","currentQuestion","maxWidth","height","boxShadow","borderRadius","top","left","colors","padZero","ExerciseSession","i","setupQuestions","timerRunning","sessionRunning","intervalId","setInterval","clearInterval","isLastQuestionInTheSum","currentTotalQuestions","grandTotalQuestions","percentage","round","data","currentClock","setCurrentClock","startTime","timeDate","moment","hours","minutes","seconds","marginRight","animationDuration","dataKey","nameKey","cx","cy","innerRadius","outerRadius","fill","entry","key","stroke","ExerciseScreen","Field","label","description","onValueChange","questionTitle","onChange","toUpperCase","questionDescription","SetupScreen","currentConfigScreen","setCurrentConfigScreen","bottom","backgroundColor","buttonNavigator","state","SummaryScreen","lastSession","correctAnswers","acc","sum","num","minute","leftSecond","format","right","strokeDasharray","AppDrawer","displayAnchor","setDisplayAnchor","hasConfig","Drawer","anchor","open","onClose","IconButton","color","App","main","ReactDOM","render","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,OAAS,oBAAoB,gBAAkB,6BAA6B,KAAO,kBAAkB,MAAQ,mBAAmB,cAAgB,2BAA2B,oBAAsB,mC,6JCC7MC,EAAaC,wBAAc,MAG1B,SAASC,EAAT,GAAwC,IAAXC,EAAU,EAAVA,SAAU,EAEdC,oBAAS,WACjC,IAAMC,EAASC,aAAaC,QAAQ,UACpC,OAAIF,GAAUA,EAAOG,OAAS,EACnBC,KAAKC,MAAML,GAEf,CACHM,YAAc,aACdC,UAAY,IACZC,eAAiB,EACjBC,yBAA2B,QAXO,mBAEnCT,EAFmC,KAE3BU,EAF2B,OAelBX,mBAAS,GAfS,mBAenCY,EAfmC,KAe7BC,EAf6B,KAiB1C,SAASC,IACL,IAAIC,EAAWb,aAAaC,QAAQ,YAMpC,OAJIY,EADDA,GAAYA,EAASX,OAAS,EAClBC,KAAKC,MAAMS,GAEX,GAqBnBC,qBAAU,WACN,IAAMf,EAASC,aAAaC,QAAQ,UAChCF,GAAUA,EAAOG,OAAS,GAC1BO,EAAUN,KAAKC,MAAML,IACrBY,EAAQ,IAERA,EAAQ,KAEb,IAOH,IAAMI,EAAeC,mBASrB,OAAO,kBAACtB,EAAWuB,SAAZ,CAAqBC,MAAO,CAAEP,UAAQF,YAAUV,SAAOoB,aAd9D,WACInB,aAAaoB,QAAQ,SAAUjB,KAAKkB,UAAUtB,IAC9CuB,OAAOC,SAASC,UAYuDC,YAxC3E,SAAqBC,EAAUC,GAC3B,IAAMC,GAoCC,IAAIC,MAAOC,UAAYf,EAAagB,QAnCrCC,EAAOL,EAAQM,KAAI,SAACC,EAAOC,GAC7B,OAAO,eACAD,EADP,CAEIR,UAAYA,EAAUS,QAGxBC,EAAU,CAACC,KAAO,IAAIR,KAAOG,OAAKM,SAASV,GAC7Cf,EAAWD,IACfC,EAAS0B,KAAKH,GACdpC,aAAaoB,QAAQ,WAAWjB,KAAKkB,UAAUR,KA6BoCD,aAAW4B,iBARlG,WACIzB,EAAagB,SAAU,IAAIF,MAAOC,WAO6Ef,iBAC9GlB,EAASa,IAIX,SAAS+B,IACZ,OAAOC,qBAAWhD,GC3EtB,IAAMiD,EAAehD,wBAAc,MAE7BiD,EAAiB,CACnB,KAAM,EACN,KAAM,EACN,KAAM,EACN,KAAM,EACN,KAAM,EACN,KAAM,EACN,KAAM,EACN,KAAM,EACN,KAAM,EACN,EAAK,EACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,IAGF,SAASC,EAAT,GAA2C,IAAZhD,EAAW,EAAXA,SAC5BiD,EAAW9B,mBACVjB,EAAU0C,IAAV1C,OA4BP,OANAe,qBAAU,WACNgC,EAASf,QAAQgB,OACjBD,EAASf,QAAQiB,UACnB,IAGK,kBAACL,EAAa1B,SAAd,CAAuBC,MAAO,CAAC+B,WAzBtC,SAAoBC,GAChB,IAAMC,EAAqBpD,EAAOS,yBAClB,OAAZ0C,QAAgCE,IAAZF,GAA4C,IAAnBA,EAAQhD,QAIzDgD,EAAQG,SAAQ,SAACC,EAAOnB,GACpBoB,YAAW,WACP,IAAMC,EAAeZ,EAAeU,EAAOG,YAC3CX,EAASf,QAAQ2B,YAAcF,EAC/BV,EAASf,QAAQ4B,OACjBJ,YAAW,WACPT,EAASf,QAAQiB,UACnB,QACHb,EAAQ,GAAKgB,SAYpB,yBAAKS,MAAO,CACRC,QAAS,OACTC,eAAgB,SAChBC,MAAO,OACPC,SAAU,WACVC,UAAW,SACXC,WAAY,SAEZ,2BAAOC,IAAKrB,EAAUsB,QAAQ,QAC1B,4BAAQC,IAAG,UAAKC,eAAL,6BAAwDC,KAAK,iBAG/E1E,GAIF,SAAS2E,IAEZ,MAAO,CAACvB,WADaP,qBAAWC,GAAzBM,Y,6BCnEX,SAASwB,EAAqBC,GAC1B,IAAMC,EAAQD,EAAOE,QAAO,SAACC,EAAIC,GAAL,OAAcD,EAAKC,IAAM,GAC/CC,EAAmBC,KAAKC,UAAY,GACpCC,GAAiBF,KAAKG,MAAsB,EAAhBH,KAAKC,UAAgB,IAAMF,GAAoB,EAAI,GACrF,OAAKJ,EAAQO,EAAiB,GAAKF,KAAKI,IAAIV,EAAOA,EAAOxE,OAAS,MAAQ8E,KAAKI,IAAIF,GACzEA,EAEAT,EAAqBC,GAIpC,SAASW,EAAsB9E,GAE3B,IADA,IAAMmE,EAAS,GACRA,EAAOxE,OAASK,GACnBmE,EAAOnC,KAAKkC,EAAqBC,IAErC,OAAOA,EAmBX,SAASY,EAAT,GAAkE,IAA3CjF,EAA0C,EAA1CA,YAAakF,EAA6B,EAA7BA,kBAAmBrC,EAAU,EAAVA,QAC5CV,EAAoBC,IAApBD,iBACAS,EAAcuB,IAAdvB,WACP,OAAO,yBAAKW,MAAO,CACfC,QAAS,eACT2B,OAAQ,OACRC,UAAW,OACXC,QAAS,OACTC,WAAY,oBAEZ,wBAAI/B,MAAO,CAACK,UAAW,SAAU2B,aAAc,SAAUvF,GACzD,yBAAKuD,MAAO,CAACK,UAAW,WACpB,4BAAQ4B,UAAWC,IAAOC,OAAQC,QAAS,WACvCxD,IACA+C,GAAkB,GAClBtC,EAAWC,KAHf,iCAUZ,SAAS+C,EAAT,GAAyH,IAApGC,EAAmG,EAAnGA,gBAAiBC,EAAkF,EAAlFA,mBAAoBC,EAA8D,EAA9DA,cAAeC,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,YAChGC,EAAYzF,iBAAO,MACnB0F,EAAa1F,iBAAO,MACnBiC,EAAcuB,IAAdvB,WAKP,OAJAnC,qBAAU,WACN4F,EAAW3E,SAAU,IAAIF,MAAOC,UAChC2E,EAAU1E,QAAQ4E,UACnB,IACI,0BAAM/C,MAAO,CAChBG,MAAO,OAAQF,QAAS,OACxB+C,cAAe,UAChBC,OAAO,GACGC,SAAU,SAACC,GACPA,EAAEC,iBACF,IAAM9E,EAAS+E,SAASF,EAAEG,OAAOC,SAASjF,OAAOhB,OAC7CgB,GAAU,KA7CnC,YAA6G,IAAtFA,EAAqF,EAArFA,OAAQgE,EAA6E,EAA7EA,gBAAiBE,EAA4D,EAA5DA,cAAeD,EAA6C,EAA7CA,mBAAoBE,EAAyB,EAAzBA,WAAYK,EAAa,EAAbA,WAC3FR,GAAgB,GAChBE,GAAc,SAAAgB,GAAG,OAAIA,EAAM,KAC3BjB,GAAoB,GACpB,IAAMkB,GAAO,IAAIxF,MAAOC,UAAY4E,EAAW3E,QAC/CsE,GAAW,SAACe,GAAD,4BAAaA,GAAb,CAAkB,CAAClF,SAAQmF,aAyCjBC,CAAa,CACTpF,SACAgE,kBACAC,qBACAC,gBACAC,aACAK,eAEJzD,EAAWuD,EAAYD,EAAa,OAIrD,yBAAK3C,MAAO,CACRC,QAAS,OACT0D,WAAY,SACZ9B,UAAW,OACXG,aAAc,SAEd,yBAAKhC,MAAO,CAACK,UAAW,OAAQuD,SAAU,SAA1C,YACA,yBAAK5D,MAAO,CAAC6D,SAAU,QACrBnB,GACF,4BAAQT,UAAWC,IAAOC,OAAQxB,KAAM,UAAxC,UAGJ,2BAAOJ,IAAKsC,EAAWZ,UAAWC,IAAO4B,MAAOnD,KAAM,SAAUX,MAAO,CAACgC,aAAc,OAAQ4B,SAAU,QACjGG,KAAM,YAIrB,SAASC,EAAT,GAAqE,IAA7CC,EAA4C,EAA5CA,aAActB,EAA8B,EAA9BA,WAAYuB,EAAkB,EAAlBA,gBAC9C,OAAO,yBAAKlE,MAAO,CACf4D,SAAU,QACVxD,SAAU,WACVwB,OAAQ,OACRuC,SAAU,QACVC,OAAQ,UAER,yBAAKpE,MAAO,CACR+B,WAAY,kBACZsC,UAAW,kCACXC,aAAc,QAASlE,SAAU,WAAYmE,IAAK,EAAGC,KAAM,EAAGrE,MAAO,OAAQiE,OAAQ,UAEzF,yBAAKpE,MAAO,CACRI,SAAU,WACVmE,IAAK,QACLpE,MAAO,OACPE,UAAW,WACX4D,EAAatB,GAAYuB,KAIrC,IAAMO,EAAS,CAAC,sBAAuB,yBAEvC,SAASC,EAAQlB,GACb,OAAOH,SAASG,EAAI3D,aAAe,EAAI,IAAM2D,EAAMA,EAGhD,SAASmB,EAAT,GAAqC,IAAXjC,EAAU,EAAVA,QAAU,EACc7D,IAA9C1C,EADgC,EAChCA,OAAQ0B,EADwB,EACxBA,YAAad,EADW,EACXA,QAASI,EADE,EACFA,aAC9BV,EAAoEN,EAApEM,YAAaC,EAAuDP,EAAvDO,UAAWC,EAA4CR,EAA5CQ,eAAgBC,EAA4BT,EAA5BS,yBAFR,EAGhBV,mBAlH3B,SAAwBS,EAAgBD,GAEpC,IADA,IAAMoE,EAAS,GACN8D,EAAI,EAAGA,EAAIlI,EAAWkI,IAC3B9D,EAAOnC,KAAK8C,EAAsB9E,IAEtC,OAAOmE,EA6GyB+D,CAAelI,EAAgBD,IAAxDuH,EAHgC,sBAIC/H,oBAAS,GAJV,mBAIhC4I,EAJgC,KAIlBxC,EAJkB,OAKKpG,oBAAS,GALd,mBAKhC6I,EALgC,KAKhBpD,EALgB,OAMHzF,mBAAS,GANN,mBAMhCyG,EANgC,KAMpBH,EANoB,OAOOtG,oBAAU,GAPjB,mBAOhCgI,EAPgC,KAOf3B,EAPe,OAQTrG,mBAAS,IARA,mBAQhC6B,EARgC,KAQvB0E,EARuB,KAWvCvF,qBAAU,WACN,IAAI8H,EAAa,KAejB,OAdID,IACID,EACAE,EAAaC,aAAY,WACrB1C,GAAmB,SAACiB,GAChB,OAAIA,EAAM7G,EACC6G,EAAM,EAEVA,OAEZ5G,GAEH0F,GAAgB,IAGjB,WACC0C,GACAE,cAAcF,MAGvB,CAACF,EAAcC,EAAgBnI,EAA0BD,IAE5DO,qBAAU,WACFyF,IAAejG,IACfiF,GAAkB,GAClBW,GAAgB,GAChBC,GAAoB,GACpBC,EAAc,GACTE,IACD7E,EAAYoG,EAAclG,GAC1BhB,EAAQ,IAEZ0F,EAAW,OAEhB,CAACE,EAAYjG,EAAWqB,EAASkG,EAAcpG,EAAad,EAAS2F,IACxE,IAAMyC,EAAyBjB,IAAoBvH,EAC7CyI,EAAyBzC,EAAahG,IAAwC,IAArBuH,EAAyB,EAAIA,GACtFmB,EAAsB3I,EAAYC,EAClC2I,EAAalE,KAAKmE,MAAOH,EAAwBC,EAAuB,KACxEG,EAAO,CACT,CAACzB,KAAM,WAAYzG,MAAOgI,GAC1B,CAACvB,KAAM,aAAczG,MAAO,IAAMgI,IArDC,EAwDCpJ,mBAAS,IAxDV,mBAwDhCuJ,EAxDgC,KAwDlBC,EAxDkB,KA0DjCC,GAAYxI,EAAagB,QAc/B,OAbAjB,qBAAU,WACN,IAAM8H,EAAaC,aAAY,WAC3B,GAAIU,GAAW,CACX,IAAMC,GAAW,IAAI3H,MAAOC,UAAYyH,GAClClC,EAAOoC,IAAOnH,SAASkH,GAC7BF,EAAgB,GAAD,OAAIjC,EAAKqC,QAAT,YAAoBpB,EAAQjB,EAAKsC,WAAjC,YAA+CrB,EAAQjB,EAAKuC,gBAEhF,KACH,OAAO,WACHd,cAAcF,MAEnB,CAACW,KAEI,yBAAK3F,MAAO,CAACmE,SAAU,OAAQlE,QAAS,OAAQ+C,cAAe,WACnE,yBAAKhD,MAAO,CAACC,QAAS,SAClB,yBAAKD,MAAO,CAAC6D,SAAU,OACvB,yBAAK7D,MAAO,CAACI,SAAU,WAAWyB,UAAU,QAAQoE,YAAY,UAC5D,kBAAC,IAAD,CAAU9F,MAAO,IAAKiE,OAAQ,KAC1B,kBAAC,IAAD,CAAK8B,kBAAmB,IAAKV,KAAMA,EAAMW,QAAQ,QAAQC,QAAQ,OAAOC,GAAG,MAAMC,GAAG,MAC/EC,YAAa,GAAIC,YAAa,GAAIC,KAAK,WAEpCjB,EAAKnH,KAAI,SAACqI,EAAOnI,GAAR,OACL,kBAAC,IAAD,CAAMoI,IAAG,eAAUpI,GAASkI,KAAMhC,EAAOlG,GAAQqI,OAAQ,cAKzE,yBAAK5G,MAAO,CAACI,SAAU,WAAYmE,IAAK,GAAIpE,MAAO,OAAQE,UAAW,WAAYoF,MAGxFV,GACF,kBAACrD,EAAD,CAAcjF,YAAaA,EAAakF,kBAAmBA,EAAmBrC,QAAS2E,EAAa,KACnGc,GAAkBpC,EAAajG,GAC5B,yBAAKsD,MAAO,CAACK,UAAW,WACnByE,GAAgB,8BACS,IAArBZ,GAA0B,wBAAIlE,MAAO,CAAC4D,SAAU,SAAtB,WAC1BM,GAAmB,IAAMiB,GAC1B,kBAACnB,EAAD,CAAeC,aAAcA,EAActB,WAAYA,EACxCuB,gBAAiBA,IAC/BiB,GACD,kBAAC9C,EAAD,CAAYC,gBAAiBA,EAAiBC,mBAAoBA,EACtDC,cAAeA,EAAeC,WAAYA,EAAYC,QAASA,EAC/DC,WAAYA,EAAYC,YAAaqB,OAStD,SAAS4C,IACpB,OAAO,yBAAK7G,MAAO,CAAC8B,QAAS,OAAQ3B,MAAO,SACxC,kBAACwE,EAAD,CAAiBjC,SAAS,KCtPnB,SAASoE,EAAT,GAAkE,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAarG,EAA6B,EAA7BA,KAAMrD,EAAuB,EAAvBA,MAAO2J,EAAgB,EAAhBA,cAE5D,OAAQ,yBAAKjH,MAAO,CAACC,QAAS,OAAQ+C,cAAe,WACjD,uBAAGf,UAAWC,IAAOgF,eAAgBH,GACrC,2BAAOpG,KAAMA,EAAMsB,UAAWC,IAAO4B,MAAOxG,MAAOA,EAC5C6J,SAAU,SAAChE,GAAD,OAAO8D,EAAc9D,EAAEG,OAAOhG,MAAM8J,kBAErD,uBAAGnF,UAAWC,IAAOmF,qBAAsBL,ICJpC,SAASM,IAAe,IAC5BnL,EAAU0C,IAAV1C,OACAM,EAAoEN,EAApEM,YAAaC,EAAuDP,EAAvDO,UAAWC,EAA4CR,EAA5CQ,eAAgBC,EAA4BT,EAA5BS,yBAFb,EAGoBV,mBAAS,GAH7B,mBAG3BqL,EAH2B,KAGNC,EAHM,OAIA3I,IAA3BhC,EAJ2B,EAI3BA,UAAWU,EAJgB,EAIhBA,aAClB,OAAQ,yBAAKyC,MAAO,CAACG,MAAM,SACvB,yBAAKH,MAAO,CACRC,QAAS,OACTG,SAAS,QACTqH,OAAS,EACTtH,MAAO,QACPuH,gBAAiB,oBAEhBH,EAAsB,GACvB,4BAAQtF,UAAWC,IAAOyF,gBAClBvF,QAAS,kBAAMoF,GAAuB,SAAChE,GAAD,OAASA,EAAM,OAD7D,QAEA,yBAAKxD,MAAO,CAAC6D,SAAU,OACtB0D,EAAsB,GACvB,4BAAQtF,UAAWC,IAAOyF,gBAClBvF,QAAS,kBAAMoF,GAAuB,SAAChE,GAAD,OAASA,EAAM,OAD7D,QAGyB,IAAxB+D,GACD,4BAAQtF,UAAWC,IAAOyF,gBAClBvF,QAAS,WACLvF,EAAU,CAACJ,cAAaC,YAAWC,iBAAgBC,6BACnDW,MAHZ,iBASJ,yBAAKyC,MAAO,CAAC8B,QAAS,OAAO3B,MAAM,OAAO4B,WAAW,kBAAkBsC,UAAU,uCACpD,IAAxBkD,GACD,oDAEyB,IAAxBA,GACD,0BAAMrE,SAAU,SAACC,GACbA,EAAEC,iBACFoE,GAAuB,SAAChE,GAAD,OAASA,EAAM,OAE1C,kBAACsD,EAAD,CACIC,MAAO,iBACPpG,KAAM,OACNrD,MAAOb,EACPwK,cAAe,SAACzD,GAAD,OAAS3G,GAAU,SAAA+K,GAAK,sBAASA,EAAT,CAAgBnL,YAAa+G,QACpEwD,YAAa,uFAKQ,IAAxBO,GACD,0BAAMrE,SAAU,SAACC,GACbA,EAAEC,iBACFoE,GAAuB,SAAChE,GAAD,OAASA,EAAM,OAE1C,kBAACsD,EAAD,CACIC,MAAK,+BACLpG,KAAM,SACNrD,MAAOZ,EACPuK,cAAe,SAACzD,GAAD,OAAS3G,GAAU,SAAA+K,GAAK,sBAASA,EAAT,CAAgBlL,UAAW2G,SAASG,SAE3EwD,YAAa,qEAGQ,IAAxBO,GACD,0BAAMrE,SAAU,SAACC,GACbA,EAAEC,iBACFoE,GAAuB,SAAChE,GAAD,OAASA,EAAM,OAE1C,kBAACsD,EAAD,CACIC,MAAK,iCACLpG,KAAM,SACNrD,MAAOX,EACPsK,cAAe,SAACzD,GAAD,OAAS3G,GAAU,SAAA+K,GAAK,sBAASA,EAAT,CAAgBjL,eAAgB0G,SAASG,SAChFwD,YAAa,2EAGQ,IAAxBO,GACD,0BAAMrE,SAAU,SAACC,GACbA,EAAEC,iBACFoE,GAAuB,SAAChE,GAAD,OAASA,EAAM,OAE1C,kBAACsD,EAAD,CACIC,MAAK,4BACLpG,KAAM,SACNrD,MAAOV,EACPqK,cAAe,SAACzD,GAAD,OAAS3G,GAAU,SAAA+K,GAAK,sBAASA,EAAT,CAAgBhL,yBAA0ByG,SAASG,SAC1FwD,YAAa,mFAGQ,IAAxBO,GAA6B,kBAAC5C,EAAD,CAAiBjC,SAAS,MC3FrD,SAASmF,IAAiB,IAC9B7K,EAAc6B,IAAd7B,WACDC,EAAWG,iBAAOJ,KACxB,KAAKC,EAASkB,SAAWlB,EAASkB,QAAQ7B,OAAS,GAC/C,OAAO,yBAAK0D,MAAO,CAAC6B,UAAU,SAAvB,iBAEX,IAAMiG,EAAc7K,EAASkB,QAAQlB,EAASkB,QAAQ7B,OAAS,GACzDyL,EAAiBD,EAAY1J,KAAK4C,QAAO,SAACgH,EAAKC,GACjD,IAAMlH,EAAQkH,EAAInK,UAAUkD,QAAO,SAACgH,EAAKE,GAAN,OAAcF,EAAME,IAAK,GAC5D,OAAOD,EAAI3J,SAAWyC,IAAUiH,EAAMA,IACvC,GACG1C,EAAalE,KAAKmE,MAAOwC,EAAiBD,EAAY1J,KAAK9B,OAAU,KACrEoC,EAAWoJ,EAAYpJ,SACvBsH,EAAU5E,KAAKmE,MAAM7G,EAAS,KAC9ByJ,EAAS/G,KAAKG,MAAMyE,EAAU,IAC9BoC,EAAapC,EAAU,GAC7B,OAAO,yBAAKhG,MAAO,CAAC4D,SAAU,SAASzD,MAAM,OAAO2B,QAAQ,OAAOxB,WAAW,OAAOyB,WAAW,kBAAkBsC,UAAU,sCACxH,2BAAOrE,MAAO,CAAC4D,SAAS,SACpB,4BACI,oCACA,4BAAKiC,IAAO,IAAI5H,KAAK6J,EAAYrJ,OAAO4J,OAAO,0BAEnD,4BACI,0CACA,4BAAKP,EAAY1J,KAAK9B,SAE1B,4BACI,+CACA,4BAAKwL,EAAY1J,KAAK9B,OAASwL,EAAY1J,KAAK,GAAGN,UAAUxB,SAEjE,4BACI,qCACA,4BAAKgJ,EAAL,OAEJ,4BACI,+CACA,4BAAK6C,EAAL,UAAoBC,EAAa,EAAb,WAAqBA,GAAaA,EAAtD,UAIR,yBAAKpI,MAAO,CAACG,MAAM,OAAOiE,OAAO,MACjC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWoB,KAAMsC,EAAY1J,KAAMwD,OAAQ,CACvC2C,IAAK,GAAI+D,MAAO,GAAI9D,KAAM,GAAIiD,OAAQ,KAEtC,kBAAC,IAAD,CAAec,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKpC,QAAQ,OAAOM,KAAK,8B,wCCzCzC,SAAS+B,IAAa,IAAD,EACwBtM,oBAAS,GADjC,mBACVuM,EADU,KACIC,EADJ,KAEV3L,EAAW8B,IAAX9B,QAED4L,EAAYvL,iBAAQ,WACtB,IAAMjB,EAASC,aAAaC,QAAQ,UACpC,SAAGF,GAAUA,EAAOG,OAAS,GAFP,IAO1B,OAAO,oCACH,kBAACsM,EAAA,EAAD,CAAQC,OAAQ,OAAQC,KAAML,EAAeM,QAAS,kBAAML,GAAiB,KACzE,yBAAK1I,MAAO,CAAC8B,QAAS,OAAQ4F,gBAAiB,gBAAiBtD,OAAQ,SACpE,yBAAKnC,UAAWC,IAAOC,OAAQC,QAAS,WACpCrF,EAAQ,GACR2L,GAAiB,KAFrB,QAIA,yBAAKzG,UAAWC,IAAOC,OAAQnC,MAAO,CAAC6B,UAAW,QAASO,QAAS,WAChErF,EAAQ,GACR2L,GAAiB,KAFrB,mBAKA,yBAAKzG,UAAWC,IAAOC,OAAQnC,MAAO,CAAC6B,UAAW,QAASO,QAAS,WAChErF,EAAQ,GACR2L,GAAiB,KAFrB,iBAMPC,EAAUxK,SACX,yBAAK6B,MAAO,CAACI,SAAU,WAAYmE,IAAK,IAAKC,KAAM,IAC/C,kBAACwE,EAAA,EAAD,CAAY5G,QAAS,kBAAMsG,GAAiB,KACxC,kBAAC,IAAD,CAAU1I,MAAO,CAACiJ,MAAO,QAASrF,SAAU,aAO7C,SAASsF,IACpB,OAAO,kBAAClN,EAAD,MACE,SAACc,GACE,OACI,kBAACmC,EAAD,KACA,yBAAKgD,UAAWC,IAAOiH,MACb,IAATrM,GAAc,kBAACwK,EAAD,MACL,IAATxK,GAAc,kBAAC+J,EAAD,MACL,IAAT/J,GAAc,kBAAC+K,EAAD,MACd,kBAACW,EAAD,WCvDrBY,IAASC,OAAO,kBAACH,EAAD,MAAOI,SAASC,eAAe,W","file":"static/js/main.be3fc410.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"App_button__3Wu2Q\",\"buttonNavigator\":\"App_buttonNavigator__3DrKD\",\"main\":\"App_main__3g0VX\",\"input\":\"App_input__coDI0\",\"questionTitle\":\"App_questionTitle__1GdSl\",\"questionDescription\":\"App_questionDescription__1lfpj\"};","import React, {createContext, useContext, useEffect, useRef, useState} from 'react';\r\n\r\nconst AppContext = createContext(null);\r\n\r\n\r\nexport function AppContextProvider({children}){\r\n\r\n    const [config, setConfig] = useState(() => {\r\n        const config = localStorage.getItem('config');\r\n        if (config && config.length > 0) {\r\n            return JSON.parse(config);\r\n        }\r\n        return {\r\n            studentName : 'RAOUL ARDY',\r\n            totalSums : 200,\r\n            totalQuestions : 6,\r\n            pauseBetweenQuestionInMs : 1000\r\n        }\r\n    });\r\n\r\n    const [page, setPage] = useState(0);\r\n\r\n    function getSession(){\r\n        let sessions = localStorage.getItem('sessions');\r\n        if(sessions && sessions.length > 0){\r\n            sessions = JSON.parse(sessions);\r\n        }else{\r\n            sessions = [];\r\n        }\r\n        return sessions;\r\n    }\r\n\r\n    function saveSession(questions,answers){\r\n        const sessionDuration = markSessionEnd();\r\n        const sums = answers.map((answer,index) => {\r\n            return {\r\n                ...answer,\r\n                questions : questions[index]\r\n            };\r\n        });\r\n        const session = {date : new Date(),sums,duration:sessionDuration };\r\n        let sessions = getSession();\r\n        sessions.push(session);\r\n        localStorage.setItem('sessions',JSON.stringify(sessions));\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const config = localStorage.getItem('config');\r\n        if (config && config.length > 0) {\r\n            setConfig(JSON.parse(config));\r\n            setPage(1);\r\n        } else {\r\n            setPage(0);\r\n        }\r\n    }, []);\r\n\r\n    function saveSettings() {\r\n        localStorage.setItem('config', JSON.stringify(config));\r\n        window.location.reload();\r\n    }\r\n\r\n    const sessionTimer = useRef();\r\n    function markSessionBegin(){\r\n        sessionTimer.current = new Date().getTime();\r\n    }\r\n\r\n    function markSessionEnd(){\r\n        return new Date().getTime() - sessionTimer.current;\r\n    }\r\n\r\n    return <AppContext.Provider value={{ setPage,setConfig,config,saveSettings,saveSession,getSession,markSessionBegin,sessionTimer}}>\r\n        {children(page)}\r\n    </AppContext.Provider>\r\n}\r\n\r\nexport function useAppContext(){\r\n    return useContext(AppContext);\r\n}\r\n","import React, {createContext, useContext, useEffect, useRef, useState} from \"react\";\r\nimport {useAppContext} from \"../AppContext\";\r\n\r\nconst SoundContext = createContext(null);\r\n\r\nconst numberTimeline = {\r\n    '-9': 0,\r\n    '-8': 1,\r\n    '-7': 2,\r\n    '-6': 3,\r\n    '-5': 4,\r\n    '-4': 5,\r\n    '-3': 6,\r\n    '-2': 7,\r\n    '-1': 8,\r\n    '1': 9,\r\n    '2': 10,\r\n    '3': 11,\r\n    '4': 12,\r\n    '5': 13,\r\n    '6': 14,\r\n    '7': 15,\r\n    '8': 16,\r\n    '9': 17,\r\n};\r\n\r\nexport function SoundContextProvider({children}) {\r\n    const soundRef = useRef();\r\n    const {config} = useAppContext();\r\n\r\n\r\n    function playSounds(numbers) {\r\n        const delayInMiliseconds = config.pauseBetweenQuestionInMs;\r\n        if (numbers === null || numbers === undefined || numbers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        numbers.forEach((number,index) => {\r\n            setTimeout(() => {\r\n                const startingTime = numberTimeline[number.toString()];\r\n                soundRef.current.currentTime = startingTime;\r\n                soundRef.current.play();\r\n                setTimeout(() => {\r\n                    soundRef.current.pause();\r\n                },900);\r\n            },(index + 1) * delayInMiliseconds);\r\n\r\n        });\r\n\r\n    }\r\n    useEffect(() => {\r\n        soundRef.current.load();\r\n        soundRef.current.pause();\r\n    },[]);\r\n\r\n\r\n    return <SoundContext.Provider value={{playSounds}}>\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%',\r\n            position: 'absolute',\r\n            textAlign: 'center',\r\n            paddingTop: '1rem',\r\n        }}>\r\n            <audio ref={soundRef} preload=\"auto\" >\r\n                <source src={`${process.env.PUBLIC_URL}/audio/mental-math-v5.mp3`} type=\"audio/mpeg\"/>\r\n            </audio>\r\n        </div>\r\n        {children}\r\n    </SoundContext.Provider>\r\n}\r\n\r\nexport function useSound() {\r\n    const {playSounds} = useContext(SoundContext);\r\n    return {playSounds};\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport styles from \"../App.module.css\";\r\nimport {useSound} from \"./SoundContext\";\r\nimport {useAppContext} from \"../AppContext\";\r\nimport {Cell, Pie, PieChart} from \"recharts\";\r\nimport moment from 'moment';\r\n\r\nfunction generateRandomNumber(result) {\r\n    const total = result.reduce((ac, next) => ac + next, 0);\r\n    const shouldBeNegative = Math.random() <= 0.3; // 30 percent chance;\r\n    const nextCandidate = (Math.floor(Math.random() * 9) + 1) * (shouldBeNegative ? -1 : 1);\r\n    if ((total + nextCandidate) > 0 && Math.abs(result[result.length - 1]) !== Math.abs(nextCandidate)) {\r\n        return nextCandidate;\r\n    } else {\r\n        return generateRandomNumber(result);\r\n    }\r\n}\r\n\r\nfunction generateQuestionArray(totalQuestions) {\r\n    const result = [];\r\n    while (result.length < totalQuestions) {\r\n        result.push(generateRandomNumber(result))\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction setupQuestions(totalQuestions, totalSums) {\r\n    const result = [];\r\n    for (let i = 0; i < totalSums; i++) {\r\n        result.push(generateQuestionArray(totalQuestions))\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction handleSubmit({answer, setTimerRunning, setCurrentSum, setCurrentQuestion, setAnswers, timeLogger}) {\r\n    setTimerRunning(false);\r\n    setCurrentSum(val => val + 1);\r\n    setCurrentQuestion(-1);\r\n    const time = new Date().getTime() - timeLogger.current;\r\n    setAnswers((val) => [...val, {answer, time}]);\r\n}\r\n\r\nfunction ClickToStart({studentName, setSessionRunning, numbers}) {\r\n    const {markSessionBegin} = useAppContext();\r\n    const {playSounds} = useSound();\r\n    return <div style={{\r\n        display: 'inline-block',\r\n        margin: 'auto',\r\n        marginTop: '2rem',\r\n        padding: '1rem',\r\n        background: 'rgba(0,0,0,0.5)'\r\n    }}>\r\n        <h1 style={{textAlign: 'center', marginBottom: '5rem'}}>{studentName}</h1>\r\n        <div style={{textAlign: 'center'}}>\r\n            <button className={styles.button} onClick={() => {\r\n                markSessionBegin();\r\n                setSessionRunning(true);\r\n                playSounds(numbers);\r\n            }}>Click Here To Begin Session\r\n            </button>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nfunction AnswerForm({setTimerRunning, setCurrentQuestion, setCurrentSum, setAnswers, isTrial, currentSum, questionSet}) {\r\n    const answerRef = useRef(null);\r\n    const timeLogger = useRef(null);\r\n    const {playSounds} = useSound();\r\n    useEffect(() => {\r\n        timeLogger.current = new Date().getTime();\r\n        answerRef.current.focus();\r\n    }, []);\r\n    return <form style={{\r\n        width: '100%', display: 'flex',\r\n        flexDirection: 'column'\r\n    }} action=\"\"\r\n                 onSubmit={(e) => {\r\n                     e.preventDefault();\r\n                     const answer = parseInt(e.target.elements.answer.value);\r\n                     if (answer >= 0) {\r\n                         handleSubmit({\r\n                             answer,\r\n                             setTimerRunning,\r\n                             setCurrentQuestion,\r\n                             setCurrentSum,\r\n                             setAnswers,\r\n                             timeLogger\r\n                         });\r\n                         playSounds(questionSet[currentSum + 1]);\r\n                     }\r\n                 }}>\r\n\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginTop: '1rem',\r\n            marginBottom: '1rem'\r\n        }}>\r\n            <div style={{textAlign: 'left', fontSize: '2rem'}}>Answer :</div>\r\n            <div style={{flexGrow: '1'}}></div>\r\n            {!isTrial &&\r\n            <button className={styles.button} type={'submit'}>Enter</button>\r\n            }\r\n        </div>\r\n        <input ref={answerRef} className={styles.input} type={'number'} style={{marginBottom: '2rem', fontSize: '8rem'}}\r\n               name={\"answer\"}/>\r\n    </form>;\r\n}\r\n\r\nfunction QuestionPanel({questionSets, currentSum, currentQuestion}) {\r\n    return <div style={{\r\n        fontSize: '18rem',\r\n        position: 'relative',\r\n        margin: 'auto',\r\n        maxWidth: '18rem',\r\n        height: '18rem',\r\n    }}>\r\n        <div style={{\r\n            background: 'rgba(0,0,0,0.5)',\r\n            boxShadow: '0px 0px 80px 10px rgba(0,0,0,1)',\r\n            borderRadius: '20rem', position: 'absolute', top: 0, left: 0, width: '100%', height: '100%'\r\n        }}/>\r\n        <div style={{\r\n            position: 'relative',\r\n            top: '-4rem',\r\n            width: '100%',\r\n            textAlign: 'center'\r\n        }}>{questionSets[currentSum][currentQuestion]}</div>\r\n    </div>;\r\n}\r\n\r\nconst colors = ['rgba(255,255,255,1)', 'rgba(255,255,255,0.5)'];\r\n\r\nfunction padZero(val) {\r\n    return parseInt(val.toString()) <= 9 ? '0' + val : val;\r\n}\r\n\r\nexport function ExerciseSession({isTrial}) {\r\n    const {config, saveSession, setPage, sessionTimer} = useAppContext();\r\n    const {studentName, totalSums, totalQuestions, pauseBetweenQuestionInMs} = config;\r\n    const [questionSets] = useState(setupQuestions(totalQuestions, totalSums));\r\n    const [timerRunning, setTimerRunning] = useState(false);\r\n    const [sessionRunning, setSessionRunning] = useState(false);\r\n    const [currentSum, setCurrentSum] = useState(0);\r\n    const [currentQuestion, setCurrentQuestion] = useState(-1);\r\n    const [answers, setAnswers] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        let intervalId = null;\r\n        if (sessionRunning) {\r\n            if (timerRunning) {\r\n                intervalId = setInterval(() => {\r\n                    setCurrentQuestion((val) => {\r\n                        if (val < totalQuestions) {\r\n                            return val + 1\r\n                        }\r\n                        return val;\r\n                    });\r\n                }, pauseBetweenQuestionInMs);\r\n            } else {\r\n                setTimerRunning(true);\r\n            }\r\n        }\r\n        return () => {\r\n            if (intervalId) {\r\n                clearInterval(intervalId);\r\n            }\r\n        }\r\n    }, [timerRunning, sessionRunning, pauseBetweenQuestionInMs, totalQuestions]);\r\n\r\n    useEffect(() => {\r\n        if (currentSum === totalSums) {\r\n            setSessionRunning(false);\r\n            setTimerRunning(false);\r\n            setCurrentQuestion(-1);\r\n            setCurrentSum(0);\r\n            if (!isTrial) {\r\n                saveSession(questionSets, answers);\r\n                setPage(2);\r\n            }\r\n            setAnswers([]);\r\n        }\r\n    }, [currentSum, totalSums, answers, questionSets, saveSession, setPage, isTrial]);\r\n    const isLastQuestionInTheSum = currentQuestion === totalQuestions;\r\n    const currentTotalQuestions = (currentSum * totalQuestions) + (currentQuestion === -1 ? 0 : currentQuestion);\r\n    const grandTotalQuestions = totalSums * totalQuestions;\r\n    const percentage = Math.round((currentTotalQuestions / grandTotalQuestions) * 100);\r\n    const data = [\r\n        {name: 'complete', value: percentage},\r\n        {name: 'incomplete', value: 100 - percentage}\r\n    ];\r\n\r\n    const [currentClock, setCurrentClock] = useState('');\r\n\r\n    const startTime = sessionTimer.current;\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            if (startTime) {\r\n                const timeDate = new Date().getTime() - startTime;\r\n                const time = moment.duration(timeDate);\r\n                setCurrentClock(`${time.hours()}:${padZero(time.minutes())}:${padZero(time.seconds())}`);\r\n            }\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        }\r\n    }, [startTime]);\r\n\r\n    return (<div style={{maxWidth: '100%', display: 'flex', flexDirection: 'column'}}>\r\n        <div style={{display: 'flex'}}>\r\n            <div style={{flexGrow: '1'}}></div>\r\n            <div style={{position: 'relative',marginTop:'-1rem',marginRight:'-1rem'}}>\r\n                <PieChart width={100} height={100}>\r\n                    <Pie animationDuration={100} data={data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\"\r\n                         innerRadius={40} outerRadius={50} fill=\"#82ca9d\">\r\n                        {\r\n                            data.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={colors[index]} stroke={'none'}/>\r\n                            ))\r\n                        }\r\n                    </Pie>\r\n                </PieChart>\r\n                <div style={{position: 'absolute', top: 40, width: '100%', textAlign: 'center'}}>{currentClock}</div>\r\n            </div>\r\n        </div>\r\n        {!sessionRunning &&\r\n        <ClickToStart studentName={studentName} setSessionRunning={setSessionRunning} numbers={questionSets[0]}/>}\r\n        {sessionRunning && currentSum < totalSums && (\r\n            <div style={{textAlign: 'center'}}>\r\n                {timerRunning && <div>\r\n                    {currentQuestion === -1 && <h1 style={{fontSize: '4rem'}}>Ready !</h1>}\r\n                    {currentQuestion >= 0 && !isLastQuestionInTheSum &&\r\n                    <QuestionPanel questionSets={questionSets} currentSum={currentSum}\r\n                                   currentQuestion={currentQuestion}/>}\r\n                    {isLastQuestionInTheSum &&\r\n                    <AnswerForm setTimerRunning={setTimerRunning} setCurrentQuestion={setCurrentQuestion}\r\n                                setCurrentSum={setCurrentSum} setAnswers={setAnswers} isTrial={isTrial}\r\n                                currentSum={currentSum} questionSet={questionSets}\r\n                    />\r\n                    }\r\n                </div>}\r\n            </div>\r\n        )}\r\n    </div>)\r\n}\r\n\r\nexport default function ExerciseScreen() {\r\n    return <div style={{padding: '2rem', width: '100%'}}>\r\n        <ExerciseSession isTrial={false}/>\r\n    </div>;\r\n}\r\n","import styles from \"../App.module.css\";\r\nimport React from \"react\";\r\n\r\nexport default function Field({label, description, type, value, onValueChange}) {\r\n\r\n    return (<div style={{display: 'flex', flexDirection: 'column'}}>\r\n        <p className={styles.questionTitle}>{label}</p>\r\n        <input type={type} className={styles.input} value={value}\r\n               onChange={(e) => onValueChange(e.target.value.toUpperCase())}\r\n        />\r\n        <p className={styles.questionDescription}>{description}</p>\r\n    </div>)\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Field from \"./Field\";\r\nimport styles from \"../App.module.css\";\r\nimport {useAppContext} from \"../AppContext\";\r\nimport {ExerciseSession} from \"./ExerciseScreen\";\r\n\r\nexport default function SetupScreen() {\r\n    const {config} = useAppContext();\r\n    const {studentName, totalSums, totalQuestions, pauseBetweenQuestionInMs} = config;\r\n    const [currentConfigScreen, setCurrentConfigScreen] = useState(0);\r\n    const {setConfig, saveSettings} = useAppContext();\r\n    return (<div style={{width:'100%'}}>\r\n        <div style={{\r\n            display: 'flex',\r\n            position:'fixed',\r\n            bottom : 0,\r\n            width: '100vw',\r\n            backgroundColor: 'rgba(0,0,0,0.3)'\r\n        }}>\r\n            {currentConfigScreen > 0 &&\r\n            <button className={styles.buttonNavigator}\r\n                    onClick={() => setCurrentConfigScreen((val) => val - 1)}>Back</button>}\r\n            <div style={{flexGrow: '1'}}></div>\r\n            {currentConfigScreen < 5 &&\r\n            <button className={styles.buttonNavigator}\r\n                    onClick={() => setCurrentConfigScreen((val) => val + 1)}>Next</button>\r\n            }\r\n            {currentConfigScreen === 5 &&\r\n            <button className={styles.buttonNavigator}\r\n                    onClick={() => {\r\n                        setConfig({studentName, totalSums, totalQuestions, pauseBetweenQuestionInMs});\r\n                        saveSettings();\r\n                    }}>Save Changes\r\n            </button>\r\n            }\r\n        </div>\r\n\r\n        <div style={{padding: '2rem',width:'100%',background:'rgba(0,0,0,0.5)',boxShadow:'0px 30px 80px 10px rgba(0,0,0,0.7)'}}>\r\n            {currentConfigScreen === 0 &&\r\n            <h1>Mental Math Exercise</h1>\r\n            }\r\n            {currentConfigScreen === 1 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={\"Student name ?\"}\r\n                type={\"text\"}\r\n                value={studentName}\r\n                onValueChange={(val) => setConfig(state => ({...state, studentName: val}))}\r\n                description={\"Your name will be recorded and your historical session will be kept in the device\"}\r\n            />\r\n            </form>\r\n\r\n            }\r\n            {currentConfigScreen === 2 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={`Total sums in each session ?`}\r\n                type={\"number\"}\r\n                value={totalSums}\r\n                onValueChange={(val) => setConfig(state => ({...state, totalSums: parseInt(val)}))}\r\n\r\n                description={\"For competition practice, total sums in a session usually `200`\"}\r\n            /></form>\r\n            }\r\n            {currentConfigScreen === 3 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={`Total questions in each sums ?`}\r\n                type={\"number\"}\r\n                value={totalQuestions}\r\n                onValueChange={(val) => setConfig(state => ({...state, totalQuestions: parseInt(val)}))}\r\n                description={\"For competition practice, recommended total questions in a sum is `6`\"}\r\n            /></form>\r\n            }\r\n            {currentConfigScreen === 4 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={`Pause between question  ?`}\r\n                type={\"number\"}\r\n                value={pauseBetweenQuestionInMs}\r\n                onValueChange={(val) => setConfig(state => ({...state, pauseBetweenQuestionInMs: parseInt(val)}))}\r\n                description={\"For competition practice, recommended pause is `1000` milliseconds (1 second)\"}\r\n            /></form>\r\n            }\r\n            {currentConfigScreen === 5 && <ExerciseSession isTrial={true}/>}\r\n        </div>\r\n    </div>)\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport {useAppContext} from \"../AppContext\";\r\nimport { CartesianGrid, YAxis, ResponsiveContainer, BarChart, Bar} from 'recharts';\r\nimport moment from 'moment';\r\n\r\nexport default function SummaryScreen() {\r\n    const {getSession} = useAppContext();\r\n    const sessions = useRef(getSession());\r\n    if(!(sessions.current && sessions.current.length > 0)){\r\n        return <div style={{marginTop:'5rem'}}>No Report Yet</div>\r\n    }\r\n    const lastSession = sessions.current[sessions.current.length - 1];\r\n    const correctAnswers = lastSession.sums.reduce((acc, sum) => {\r\n        const total = sum.questions.reduce((acc, num) => acc + num, 0);\r\n        return sum.answer === total ? ++acc : acc;\r\n    }, 0);\r\n    const percentage = Math.round((correctAnswers / lastSession.sums.length) * 100);\r\n    const duration = lastSession.duration;\r\n    const seconds = Math.round(duration/1000);\r\n    const minute = Math.floor(seconds / 60);\r\n    const leftSecond = seconds % 60;\r\n    return <div style={{fontSize: '1.5rem',width:'100%',padding:'1rem',paddingTop:'3rem',background:'rgba(0,0,0,0.4)',boxShadow:'0px 30px 30px 0px rgba(0,0,0,0.5)'}}>\r\n        <table style={{fontSize:'1rem'}}>\r\n            <tr>\r\n                <td>Date</td>\r\n                <td>{moment(new Date(lastSession.date)).format('DD MMM YYYY HH:mm:ss')}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Total Sums</td>\r\n                <td>{lastSession.sums.length}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Total Questions</td>\r\n                <td>{lastSession.sums.length * lastSession.sums[0].questions.length}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Score</td>\r\n                <td>{percentage} %</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Completion time</td>\r\n                <td>{minute} Min : {leftSecond < 9 ? `0${leftSecond}`:leftSecond} Sec</td>\r\n            </tr>\r\n        </table>\r\n\r\n        <div style={{width:'100%',height:300}}>\r\n        <ResponsiveContainer>\r\n            <BarChart  data={lastSession.sums} margin={{\r\n                top: 20, right: 20, left: 20, bottom: 20,\r\n            }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <YAxis />\r\n                <Bar dataKey=\"time\" fill=\"rgba(255,255,255,0.9)\" />\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {useRef, useState} from \"react\";\r\nimport styles from './App.module.css';\r\nimport ExerciseScreen from \"./component/ExerciseScreen\";\r\nimport SetupScreen from \"./component/SetupScreen\";\r\nimport {SoundContextProvider} from \"./component/SoundContext\";\r\nimport {AppContextProvider, useAppContext} from \"./AppContext\";\r\nimport SummaryScreen from \"./component/SummaryScreen\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nfunction AppDrawer() {\r\n    const [displayAnchor,setDisplayAnchor] = useState(false);\r\n    const {setPage} = useAppContext();\r\n\r\n    const hasConfig = useRef((() => {\r\n        const config = localStorage.getItem('config');\r\n        if(config && config.length > 0){\r\n            return true;\r\n        }\r\n        return false;\r\n    })());\r\n    return <>\r\n        <Drawer anchor={'left'} open={displayAnchor} onClose={() => setDisplayAnchor(false)}>\r\n            <div style={{padding: '1rem', backgroundColor: 'rgba(0,0,0,1)', height: '100%'}}>\r\n                <div className={styles.button} onClick={() => {\r\n                    setPage(1);\r\n                    setDisplayAnchor(false);\r\n                }}>Home</div>\r\n                <div className={styles.button} style={{marginTop: '2rem'}} onClick={() => {\r\n                    setPage(0);\r\n                    setDisplayAnchor(false);\r\n                }}>Change Settings\r\n                </div>\r\n                <div className={styles.button} style={{marginTop: '2rem'}} onClick={() => {\r\n                    setPage(2);\r\n                    setDisplayAnchor(false)\r\n                }}>View Report</div>\r\n            </div>\r\n        </Drawer>\r\n        {hasConfig.current &&\r\n        <div style={{position: 'absolute', top: '0', left: 0}}>\r\n            <IconButton onClick={() => setDisplayAnchor(true)}>\r\n                <MenuIcon style={{color: 'white', fontSize: '2rem'}}/>\r\n            </IconButton>\r\n        </div>\r\n        }\r\n    </>;\r\n}\r\n\r\nexport default function App() {\r\n    return <AppContextProvider>\r\n            {(page) => {\r\n                return (\r\n                    <SoundContextProvider>\r\n                    <div className={styles.main}>\r\n                    {page === 0 && <SetupScreen/>}\r\n                    {page === 1 && <ExerciseScreen/>}\r\n                    {page === 2 && <SummaryScreen/>}\r\n                    {<AppDrawer />}\r\n                </div></SoundContextProvider>)\r\n            }}</AppContextProvider>\r\n\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}