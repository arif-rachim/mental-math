{"version":3,"sources":["App.module.css","AppContext.js","component/SoundContext.js","component/ExerciseScreen.js","component/Field.js","component/SetupScreen.js","component/SummaryScreen.js","component/WeaknessScreen.js","App.js","index.js"],"names":["module","exports","AppContext","createContext","AppContextProvider","children","useState","config","localStorage","getItem","length","JSON","parse","studentName","totalSums","totalQuestions","pauseBetweenQuestionInMs","setConfig","page","setPage","getSession","sessions","useEffect","sessionTimer","useRef","getAllWrongAnswers","limit","wrongSums","reduce","accumulator","session","wrongAnswers","sums","filter","sum","answer","questions","acc","next","map","wa","date","startIndex","splice","Provider","value","saveSettings","setItem","stringify","window","location","reload","saveSession","answers","sessionDuration","time","Date","getTime","current","markSessionEnd","index","duration","push","markSessionBegin","getWeakness","score","forEach","key","join","count","scores","Object","values","sort","a","b","useAppContext","useContext","SoundContext","numberTimeline","SoundContextProvider","soundRef","load","pause","playSounds","numbers","delayInMiliseconds","undefined","number","setTimeout","startingTime","toString","currentTime","play","style","display","justifyContent","width","position","textAlign","paddingTop","ref","preload","src","process","type","useSound","generateRandomNumber","result","total","ac","shouldBeNegative","Math","random","nextCandidate","floor","abs","generateQuestionArray","ClickToStart","setSessionRunning","margin","marginTop","padding","background","marginBottom","className","styles","button","onClick","AnswerForm","setTimerRunning","setCurrentQuestion","setCurrentSum","setAnswers","isTrial","currentSum","questionSet","answerRef","timeLogger","focus","flexDirection","action","onSubmit","e","preventDefault","parseInt","target","elements","val","handleSubmit","alignItems","fontSize","flexGrow","input","name","QuestionPanel","questionSets","currentQuestion","question","error","console","maxWidth","height","boxShadow","borderRadius","top","left","colors","padZero","ExerciseSession","i","setupQuestions","timerRunning","sessionRunning","intervalId","setInterval","clearInterval","isLastQuestionInTheSum","currentTotalQuestions","grandTotalQuestions","percentage","round","data","currentClock","setCurrentClock","startTime","timeDate","moment","hours","minutes","seconds","marginRight","animationDuration","dataKey","nameKey","cx","cy","innerRadius","outerRadius","fill","entry","stroke","ExerciseScreen","ExerciseWeaknessScreen","w","slice","Field","label","description","onValueChange","questionTitle","onChange","toUpperCase","questionDescription","SetupScreen","currentConfigScreen","setCurrentConfigScreen","bottom","backgroundColor","buttonNavigator","state","SummaryScreen","lastSession","correctAnswers","num","minute","leftSecond","flexWrap","format","isCorrect","paddingLeft","paddingRight","toFixed","WeaknessScreen","AppDrawer","displayAnchor","setDisplayAnchor","hasConfig","Drawer","anchor","open","onClose","IconButton","color","App","main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d002eb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"App_button__3Wu2Q\",\"buttonNavigator\":\"App_buttonNavigator__3DrKD\",\"main\":\"App_main__3g0VX\",\"input\":\"App_input__coDI0\",\"questionTitle\":\"App_questionTitle__1GdSl\",\"questionDescription\":\"App_questionDescription__1lfpj\"};","import React, {createContext, useContext, useEffect, useRef, useState} from 'react';\r\n\r\nconst AppContext = createContext(null);\r\n\r\n\r\nexport function AppContextProvider({children}){\r\n\r\n    const [config, setConfig] = useState(() => {\r\n        const config = localStorage.getItem('config');\r\n        if (config && config.length > 0) {\r\n            return JSON.parse(config);\r\n        }\r\n        return {\r\n            studentName : 'RAOUL ARDY',\r\n            totalSums : 200,\r\n            totalQuestions : 6,\r\n            pauseBetweenQuestionInMs : 1000\r\n        }\r\n    });\r\n\r\n    const [page, setPage] = useState(0);\r\n\r\n    function getSession(){\r\n        let sessions = localStorage.getItem('sessions');\r\n        if(sessions && sessions.length > 0){\r\n            sessions = JSON.parse(sessions);\r\n        }else{\r\n            sessions = [];\r\n        }\r\n        return sessions;\r\n    }\r\n\r\n    function saveSession(questions,answers){\r\n        const sessionDuration = markSessionEnd();\r\n        const sums = answers.map((answer,index) => {\r\n            return {\r\n                ...answer,\r\n                questions : questions[index]\r\n            };\r\n        });\r\n        const session = {date : new Date(),sums,duration:sessionDuration };\r\n        let sessions = getSession();\r\n        sessions.push(session);\r\n        localStorage.setItem('sessions',JSON.stringify(sessions));\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const config = localStorage.getItem('config');\r\n        if (config && config.length > 0) {\r\n            setConfig(JSON.parse(config));\r\n            setPage(1);\r\n        } else {\r\n            setPage(0);\r\n        }\r\n    }, []);\r\n\r\n    function saveSettings() {\r\n        localStorage.setItem('config', JSON.stringify(config));\r\n        window.location.reload();\r\n    }\r\n\r\n    const sessionTimer = useRef();\r\n    function markSessionBegin(){\r\n        sessionTimer.current = new Date().getTime();\r\n    }\r\n\r\n    function markSessionEnd(){\r\n        const time = new Date().getTime() - sessionTimer.current\r\n        sessionTimer.current = null;\r\n        return time;\r\n    }\r\n\r\n    function getAllWrongAnswers(limit){\r\n        const sessions = getSession();\r\n        let wrongSums = sessions.reduce((accumulator,session) => {\r\n            let wrongAnswers = session.sums.filter(sum => {\r\n                return sum.answer !== sum.questions.reduce((acc,next) => acc+next,0);\r\n            });\r\n            wrongAnswers = wrongAnswers.map(wa => {\r\n                return {...wa,date:session.date}\r\n            });\r\n            return [...accumulator,...wrongAnswers]\r\n        },[]);\r\n        let startIndex = wrongSums.length - limit;\r\n        startIndex = startIndex < 0 ? 0 : startIndex;\r\n        const result = wrongSums.splice(startIndex,wrongSums.length);\r\n        return result;\r\n    }\r\n\r\n    function getWeakness(){\r\n        let wrongAnswers = getAllWrongAnswers(1000);\r\n\r\n        const score = {};\r\n        wrongAnswers.forEach((wa) => {\r\n            const key = wa.questions.join(',');\r\n            score[key] = score[key] || {\r\n                count : 0,\r\n                questions : wa.questions,\r\n                answers : []\r\n            };\r\n            score[key].count += 1;\r\n            score[key].answers.push({answer:wa.answer,date:wa.date,time:wa.time});\r\n        });\r\n        const scores = Object.values(score);\r\n        scores.sort((a,b) => {\r\n            if (a.answers.length > b.answers.length) return -1;\r\n            if (b.answers.length > a.answers.length) return 1;\r\n            return 0;\r\n        });\r\n        return scores;\r\n    }\r\n\r\n    return <AppContext.Provider value={{ setPage,setConfig,config,saveSettings,saveSession,getSession,markSessionBegin,sessionTimer,getAllWrongAnswers,getWeakness}}>\r\n        {children(page)}\r\n    </AppContext.Provider>\r\n}\r\n\r\nexport function useAppContext(){\r\n    return useContext(AppContext);\r\n}\r\n","import React, {createContext, useContext, useEffect, useRef} from \"react\";\r\nimport {useAppContext} from \"../AppContext\";\r\n\r\nconst SoundContext = createContext(null);\r\n\r\nconst numberTimeline = {\r\n    '-9': 0,\r\n    '-8': 1,\r\n    '-7': 2,\r\n    '-6': 3,\r\n    '-5': 4,\r\n    '-4': 5,\r\n    '-3': 6,\r\n    '-2': 7,\r\n    '-1': 8,\r\n    '1': 9,\r\n    '2': 10,\r\n    '3': 11,\r\n    '4': 12,\r\n    '5': 13,\r\n    '6': 14,\r\n    '7': 15,\r\n    '8': 16,\r\n    '9': 17,\r\n};\r\n\r\nexport function SoundContextProvider({children}) {\r\n    const soundRef = useRef();\r\n    const {config} = useAppContext();\r\n\r\n\r\n    function playSounds(numbers) {\r\n        const delayInMiliseconds = config.pauseBetweenQuestionInMs;\r\n        if (numbers === null || numbers === undefined || numbers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        numbers.forEach((number,index) => {\r\n            setTimeout(() => {\r\n                const startingTime = numberTimeline[number.toString()];\r\n                soundRef.current.currentTime = startingTime;\r\n                soundRef.current.play();\r\n                setTimeout(() => {\r\n                    soundRef.current.pause();\r\n                },900);\r\n            },(index + 1) * delayInMiliseconds);\r\n\r\n        });\r\n\r\n    }\r\n    useEffect(() => {\r\n        soundRef.current.load();\r\n        soundRef.current.pause();\r\n    },[]);\r\n\r\n\r\n    return <SoundContext.Provider value={{playSounds}}>\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%',\r\n            position: 'absolute',\r\n            textAlign: 'center',\r\n            paddingTop: '1rem',\r\n        }}>\r\n            <audio ref={soundRef} preload=\"auto\" >\r\n                <source src={`${process.env.PUBLIC_URL}/audio/mental-math-v5.mp3`} type=\"audio/mpeg\"/>\r\n            </audio>\r\n        </div>\r\n        {children}\r\n    </SoundContext.Provider>\r\n}\r\n\r\nexport function useSound() {\r\n    const {playSounds} = useContext(SoundContext);\r\n    return {playSounds};\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport styles from \"../App.module.css\";\r\nimport {useSound} from \"./SoundContext\";\r\nimport {useAppContext} from \"../AppContext\";\r\nimport {Cell, Pie, PieChart} from \"recharts\";\r\nimport moment from 'moment';\r\n\r\nfunction generateRandomNumber(result) {\r\n    const total = result.reduce((ac, next) => ac + next, 0);\r\n    const shouldBeNegative = Math.random() <= 0.3; // 30 percent chance;\r\n    const nextCandidate = (Math.floor(Math.random() * 9) + 1) * (shouldBeNegative ? -1 : 1);\r\n    if ((total + nextCandidate) > 0 && Math.abs(result[result.length - 1]) !== Math.abs(nextCandidate)) {\r\n        return nextCandidate;\r\n    } else {\r\n        return generateRandomNumber(result);\r\n    }\r\n}\r\n\r\nfunction generateQuestionArray(totalQuestions) {\r\n    const result = [];\r\n    while (result.length < totalQuestions) {\r\n        result.push(generateRandomNumber(result))\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction setupQuestions(totalQuestions, totalSums) {\r\n    const result = [];\r\n    for (let i = 0; i < totalSums; i++) {\r\n        result.push(generateQuestionArray(totalQuestions))\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction handleSubmit({answer, setTimerRunning, setCurrentSum, setCurrentQuestion, setAnswers, timeLogger}) {\r\n    setTimerRunning(false);\r\n    setCurrentSum(val => val + 1);\r\n    setCurrentQuestion(-1);\r\n    const time = new Date().getTime() - timeLogger.current;\r\n    setAnswers((val) => [...val, {answer, time}]);\r\n}\r\n\r\nfunction ClickToStart({studentName, setSessionRunning, numbers}) {\r\n    const {markSessionBegin} = useAppContext();\r\n    const {playSounds} = useSound();\r\n    return <div style={{\r\n        display: 'inline-block',\r\n        margin: 'auto',\r\n        marginTop: '2rem',\r\n        padding: '1rem',\r\n        background: 'rgba(0,0,0,0.5)'\r\n    }}>\r\n        <h1 style={{textAlign: 'center', marginBottom: '5rem'}}>{studentName}</h1>\r\n        <div style={{textAlign: 'center'}}>\r\n            <button className={styles.button} onClick={() => {\r\n                markSessionBegin();\r\n                setSessionRunning(true);\r\n                playSounds(numbers);\r\n            }}>Click To Begin Session\r\n            </button>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nfunction AnswerForm({setTimerRunning, setCurrentQuestion, setCurrentSum, setAnswers, isTrial, currentSum, questionSet}) {\r\n    const answerRef = useRef(null);\r\n    const timeLogger = useRef(null);\r\n    const {playSounds} = useSound();\r\n\r\n    useEffect(() => {\r\n        timeLogger.current = new Date().getTime();\r\n        answerRef.current.focus();\r\n    }, []);\r\n    return <form style={{\r\n        width: '100%', display: 'flex',\r\n        flexDirection: 'column'\r\n    }} action=\"\"\r\n                 onSubmit={(e) => {\r\n                     e.preventDefault();\r\n                     const answer = parseInt(e.target.elements.answer.value);\r\n                     if (answer >= 0) {\r\n                         handleSubmit({\r\n                             answer,\r\n                             setTimerRunning,\r\n                             setCurrentQuestion,\r\n                             setCurrentSum,\r\n                             setAnswers,\r\n                             timeLogger\r\n                         });\r\n                         playSounds(questionSet[currentSum + 1]);\r\n                     }\r\n                 }}>\r\n\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginTop: '1rem',\r\n            marginBottom: '1rem'\r\n        }}>\r\n            <div style={{textAlign: 'left', fontSize: '2rem'}}>Answer :</div>\r\n            <div style={{flexGrow: '1'}}></div>\r\n            {!isTrial &&\r\n            <button className={styles.button} type={'submit'}>Enter</button>\r\n            }\r\n        </div>\r\n        <input ref={answerRef} className={styles.input} type={'number'} style={{marginBottom: '2rem', fontSize: '8rem'}}\r\n               name={\"answer\"}/>\r\n    </form>;\r\n}\r\n\r\nfunction QuestionPanel({questionSets, currentSum, currentQuestion}) {\r\n    let question = 0;\r\n    try{\r\n        question = questionSets[currentSum][currentQuestion];\r\n    }catch(error){\r\n        console.error(error);\r\n    }\r\n\r\n    return <div style={{\r\n        fontSize: '18rem',\r\n        position: 'relative',\r\n        margin: 'auto',\r\n        maxWidth: '18rem',\r\n        height: '18rem',\r\n    }}>\r\n        <div style={{\r\n            background: 'rgba(0,0,0,0.5)',\r\n            boxShadow: '0px 0px 80px 10px rgba(0,0,0,1)',\r\n            borderRadius: '20rem', position: 'absolute', top: 0, left: 0, width: '100%', height: '100%'\r\n        }}/>\r\n\r\n        <div style={{\r\n            position: 'relative',\r\n            top: '-4rem',\r\n            width: '100%',\r\n            textAlign: 'center'\r\n        }}>{question}</div>\r\n    </div>;\r\n}\r\n\r\nconst colors = ['rgba(255,255,255,1)', 'rgba(255,255,255,0.5)'];\r\n\r\nfunction padZero(val) {\r\n    return parseInt(val.toString()) <= 9 ? '0' + val : val;\r\n}\r\n\r\nexport function ExerciseSession({isTrial,questions}) {\r\n    const {config, saveSession, setPage, sessionTimer} = useAppContext();\r\n    const {studentName, totalSums, totalQuestions, pauseBetweenQuestionInMs} = config;\r\n    const [questionSets] = useState(() => {\r\n        if(questions){\r\n            return questions;\r\n        }\r\n        return setupQuestions(totalQuestions, totalSums);\r\n    });\r\n\r\n    const [timerRunning, setTimerRunning] = useState(false);\r\n    const [sessionRunning, setSessionRunning] = useState(false);\r\n    const [currentSum, setCurrentSum] = useState(0);\r\n    const [currentQuestion, setCurrentQuestion] = useState(-1);\r\n    const [answers, setAnswers] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        let intervalId = null;\r\n        if (sessionRunning) {\r\n            if (timerRunning) {\r\n                intervalId = setInterval(() => {\r\n                    setCurrentQuestion((val) => {\r\n                        if (val < totalQuestions) {\r\n                            return val + 1\r\n                        }\r\n                        return val;\r\n                    });\r\n                }, pauseBetweenQuestionInMs);\r\n            } else {\r\n                setTimerRunning(true);\r\n            }\r\n        }\r\n        return () => {\r\n            if (intervalId) {\r\n                clearInterval(intervalId);\r\n            }\r\n        }\r\n    }, [timerRunning, sessionRunning, pauseBetweenQuestionInMs, totalQuestions]);\r\n\r\n    useEffect(() => {\r\n        if (currentSum === totalSums) {\r\n            setSessionRunning(false);\r\n            setTimerRunning(false);\r\n            setCurrentQuestion(-1);\r\n            setCurrentSum(0);\r\n            if (!isTrial) {\r\n                saveSession(questionSets, answers);\r\n                setPage(2);\r\n            }\r\n            setAnswers([]);\r\n        }\r\n    }, [currentSum, totalSums, answers, questionSets, saveSession, setPage, isTrial]);\r\n    const isLastQuestionInTheSum = currentQuestion === totalQuestions;\r\n    const currentTotalQuestions = (currentSum * totalQuestions) + (currentQuestion === -1 ? 0 : currentQuestion);\r\n    const grandTotalQuestions = totalSums * totalQuestions;\r\n    const percentage = Math.round((currentTotalQuestions / grandTotalQuestions) * 100);\r\n    const data = [\r\n        {name: 'complete', value: percentage},\r\n        {name: 'incomplete', value: 100 - percentage}\r\n    ];\r\n\r\n    const [currentClock, setCurrentClock] = useState('');\r\n\r\n    const startTime = sessionTimer.current;\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            if (startTime) {\r\n                const timeDate = new Date().getTime() - startTime;\r\n                const time = moment.duration(timeDate);\r\n                setCurrentClock(`${time.hours()}:${padZero(time.minutes())}:${padZero(time.seconds())}`);\r\n            }\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        }\r\n    }, [startTime]);\r\n\r\n    return (<div style={{maxWidth: '100%', display: 'flex', flexDirection: 'column'}}>\r\n        <div style={{display: 'flex'}}>\r\n            <div style={{flexGrow: '1'}}></div>\r\n            <div style={{position: 'relative',marginTop:'-1rem',marginRight:'-1rem'}}>\r\n                <PieChart width={100} height={100}>\r\n                    <Pie animationDuration={100} data={data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\"\r\n                         innerRadius={40} outerRadius={50} fill=\"#82ca9d\">\r\n                        {\r\n                            data.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={colors[index]} stroke={'none'}/>\r\n                            ))\r\n                        }\r\n                    </Pie>\r\n                </PieChart>\r\n                <div style={{position: 'absolute', top: 40, width: '100%', textAlign: 'center'}}>{currentClock}</div>\r\n            </div>\r\n        </div>\r\n        {!sessionRunning &&\r\n        <ClickToStart studentName={studentName} setSessionRunning={setSessionRunning} numbers={questionSets[0]}/>}\r\n        {sessionRunning && currentSum < totalSums && (\r\n            <div style={{textAlign: 'center'}}>\r\n                {timerRunning && <div>\r\n                    {currentQuestion === -1 && <h1 style={{fontSize: '4rem'}}>Ready !</h1>}\r\n                    {currentQuestion >= 0 && !isLastQuestionInTheSum &&\r\n                    <QuestionPanel questionSets={questionSets} currentSum={currentSum}\r\n                                   currentQuestion={currentQuestion}/>}\r\n                    {isLastQuestionInTheSum &&\r\n                    <AnswerForm setTimerRunning={setTimerRunning} setCurrentQuestion={setCurrentQuestion}\r\n                                setCurrentSum={setCurrentSum} setAnswers={setAnswers} isTrial={isTrial}\r\n                                currentSum={currentSum} questionSet={questionSets}\r\n                    />\r\n                    }\r\n                </div>}\r\n            </div>\r\n        )}\r\n    </div>)\r\n}\r\n\r\nexport default function ExerciseScreen() {\r\n    return <div style={{padding: '2rem', width: '100%'}}>\r\n        <ExerciseSession isTrial={false}/>\r\n    </div>;\r\n}\r\n\r\nexport function ExerciseWeaknessScreen() {\r\n    const {getWeakness,config} = useAppContext();\r\n    const [weakness] = useState(getWeakness());\r\n    let questions = weakness.map(w => w.questions);\r\n    questions = questions.slice(0,config.totalSums);\r\n    return <div style={{padding: '2rem', width: '100%'}}>\r\n        <ExerciseSession isTrial={false} questions={questions}/>\r\n    </div>;\r\n}\r\n","import styles from \"../App.module.css\";\r\nimport React from \"react\";\r\n\r\nexport default function Field({label, description, type, value, onValueChange}) {\r\n\r\n    return (<div style={{display: 'flex', flexDirection: 'column'}}>\r\n        <p className={styles.questionTitle}>{label}</p>\r\n        <input type={type} className={styles.input} value={value}\r\n               onChange={(e) => onValueChange(e.target.value.toUpperCase())}\r\n        />\r\n        <p className={styles.questionDescription}>{description}</p>\r\n    </div>)\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Field from \"./Field\";\r\nimport styles from \"../App.module.css\";\r\nimport {useAppContext} from \"../AppContext\";\r\nimport {ExerciseSession} from \"./ExerciseScreen\";\r\n\r\nexport default function SetupScreen() {\r\n    const {config} = useAppContext();\r\n    const {studentName, totalSums, totalQuestions, pauseBetweenQuestionInMs} = config;\r\n    const [currentConfigScreen, setCurrentConfigScreen] = useState(0);\r\n    const {setConfig, saveSettings} = useAppContext();\r\n\r\n\r\n    return (<div style={{width:'100%'}}>\r\n        <div style={{\r\n            display: 'flex',\r\n            position:'fixed',\r\n            bottom : 0,\r\n            width: '100vw',\r\n            backgroundColor: 'rgba(0,0,0,0.3)'\r\n        }}>\r\n            {currentConfigScreen > 0 &&\r\n            <button className={styles.buttonNavigator}\r\n                    onClick={() => setCurrentConfigScreen((val) => val - 1)}>Back</button>}\r\n            <div style={{flexGrow: '1'}}></div>\r\n            {currentConfigScreen < 5 &&\r\n            <button className={styles.buttonNavigator}\r\n                    onClick={() => setCurrentConfigScreen((val) => val + 1)}>Next</button>\r\n            }\r\n            {currentConfigScreen === 5 &&\r\n            <button className={styles.buttonNavigator}\r\n                    onClick={() => {\r\n                        setConfig({studentName, totalSums, totalQuestions, pauseBetweenQuestionInMs});\r\n                        saveSettings();\r\n                    }}>Save Changes\r\n            </button>\r\n            }\r\n        </div>\r\n\r\n        <div style={{padding: '2rem',width:'100%',background:'rgba(0,0,0,0.5)',boxShadow:'0px 30px 80px 10px rgba(0,0,0,0.7)'}}>\r\n            {currentConfigScreen === 0 &&\r\n            <h1>Mental Math Exercise</h1>\r\n            }\r\n            {currentConfigScreen === 1 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={\"Student name ?\"}\r\n                type={\"text\"}\r\n                value={studentName}\r\n                onValueChange={(val) => setConfig(state => ({...state, studentName: val}))}\r\n                description={\"Your name will be recorded and your historical session will be kept in the device\"}\r\n            />\r\n            </form>\r\n\r\n            }\r\n            {currentConfigScreen === 2 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={`Total sums in each session ?`}\r\n                type={\"number\"}\r\n                value={totalSums}\r\n                onValueChange={(val) => setConfig(state => ({...state, totalSums: parseInt(val)}))}\r\n\r\n                description={\"For competition practice, total sums in a session usually `200`\"}\r\n            /></form>\r\n            }\r\n            {currentConfigScreen === 3 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={`Total questions in each sums ?`}\r\n                type={\"number\"}\r\n                value={totalQuestions}\r\n                onValueChange={(val) => setConfig(state => ({...state, totalQuestions: parseInt(val)}))}\r\n                description={\"For competition practice, recommended total questions in a sum is `6`\"}\r\n            /></form>\r\n            }\r\n            {currentConfigScreen === 4 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={`Pause between question  ?`}\r\n                type={\"number\"}\r\n                value={pauseBetweenQuestionInMs}\r\n                onValueChange={(val) => setConfig(state => ({...state, pauseBetweenQuestionInMs: parseInt(val)}))}\r\n                description={\"For competition practice, recommended pause is `1000` milliseconds (1 second)\"}\r\n            /></form>\r\n            }\r\n            {currentConfigScreen === 5 && <ExerciseSession isTrial={true}/>}\r\n        </div>\r\n    </div>)\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {useAppContext} from \"../AppContext\";\r\nimport moment from 'moment';\r\n\r\nexport default function SummaryScreen() {\r\n    const {getSession} = useAppContext();\r\n    const [sessions] = useState(() => getSession());\r\n    if (!(sessions && sessions.length > 0)) {\r\n        return <div style={{marginTop: '5rem'}}>No Report Yet</div>\r\n    }\r\n    const lastSession = sessions[sessions.length - 1];\r\n    const correctAnswers = lastSession.sums.reduce((acc, sum) => {\r\n        const total = sum.questions.reduce((acc, num) => acc + num, 0);\r\n        return sum.answer === total ? ++acc : acc;\r\n    }, 0);\r\n    const percentage = Math.round((correctAnswers / lastSession.sums.length) * 100);\r\n    const duration = lastSession.duration;\r\n    const seconds = Math.round(duration / 1000);\r\n    const minute = Math.floor(seconds / 60);\r\n    const leftSecond = seconds % 60;\r\n    return <div style={{\r\n        fontSize: '1.5rem',\r\n        width: '100%',\r\n        paddingTop: '3rem',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    }}>\r\n        <div style={{display: 'flex', flexDirection: 'column'}}>\r\n            <div style={{display: 'flex', flexWrap: 'nowrap'}}>\r\n                <div\r\n                    style={{backgroundColor: 'rgba(255,255,255,0.1)', padding: '1rem', margin: '0.2rem', width: '70%'}}>\r\n                    <div style={{fontSize: '1rem'}}>Date</div>\r\n                    <div>{moment(new Date(lastSession.date)).format('DD MMM YYYY HH:mm:ss')}</div>\r\n                </div>\r\n                <div\r\n                    style={{backgroundColor: 'rgba(255,255,255,0.1)', padding: '1rem', margin: '0.2rem', width: '15%'}}>\r\n                    <div style={{fontSize: '1rem'}}>Sums</div>\r\n                    <div>{lastSession.sums.length}</div>\r\n                </div>\r\n                <div style={{backgroundColor: 'rgba(255,255,255,0.1)', padding: '1rem', margin: '0.2rem'}}>\r\n                    <div style={{fontSize: '1rem'}}>Questions</div>\r\n                    <div>{lastSession.sums.length * lastSession.sums[0].questions.length}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{display: 'flex', flexWrap: 'nowrap'}}>\r\n                <div style={{\r\n                    backgroundColor: 'rgba(255,255,255,0.1)',\r\n                    padding: '1rem',\r\n                    margin: '0.2rem',\r\n                    width: '100%'\r\n                }}>\r\n                    <div style={{fontSize: '1rem'}}>Duration</div>\r\n                    <div>{minute} Min : {leftSecond < 9 ? `0${leftSecond}` : leftSecond} Sec</div>\r\n                </div>\r\n                <div style={{backgroundColor: 'rgba(255,255,255,0.1)', padding: '1rem', margin: '0.2rem'}}>\r\n                    <div style={{fontSize: '1rem'}}>Score</div>\r\n                    <div>{percentage}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <table style={{\r\n                textAlign: 'center',\r\n                backgroundColor: 'rgba(255,255,255,0.1)',\r\n                margin: '0.2rem',\r\n                fontSize: '0.9rem'\r\n            }}>\r\n                <thead>\r\n                <tr>\r\n                    <td style={{padding: '1rem'}}>No</td>\r\n                    <td style={{padding: '1rem'}}>Time</td>\r\n                    <td style={{padding: '1rem'}}>Questions</td>\r\n                    <td style={{padding: '1rem'}}>Answer</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {lastSession.sums.map((sum, index) => {\r\n                    const isCorrect = sum.answer === sum.questions.reduce((acc, next) => acc + next, 0);\r\n                    return <tr key={index} style={{backgroundColor: isCorrect ? 'none' : 'rgba(169,8,8,0.5)'}}>\r\n                        <td style={{paddingLeft: '1rem', paddingRight: '1rem'}}>\r\n                            {index + 1}\r\n                        </td>\r\n                        <td style={{textAlign: 'right', paddingLeft: '1rem', paddingRight: '1rem'}}>\r\n                            {(sum.time / 1000).toFixed(1)}\r\n                        </td>\r\n                        <td style={{textAlign: 'right', paddingLeft: '1rem', paddingRight: '1rem'}}>\r\n                            {sum.questions.join(',')}\r\n                        </td>\r\n                        <td style={{textAlign: 'right', paddingLeft: '1rem', paddingRight: '1rem'}}>\r\n                            {sum.answer}\r\n                        </td>\r\n                    </tr>\r\n\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, { useState} from \"react\";\r\nimport {useAppContext} from \"../AppContext\";\r\n\r\nimport styles from \"../App.module.css\";\r\n\r\nexport default function WeaknessScreen(){\r\n    const {getWeakness,setPage} = useAppContext();\r\n    let [scores] = useState(() => getWeakness());\r\n    return <div>\r\n        <div style={{margin:'1rem',textAlign:'right'}}>\r\n            <button className={styles.button} onClick={() => setPage(31)}>Exercise Weakness</button>\r\n        </div>\r\n        <div>\r\n            <table style={{textAlign:'center',backgroundColor:'rgba(255,255,255,0.1)',margin:'1rem'}}>\r\n                <thead>\r\n                <tr>\r\n                    <td style={{padding:'1rem'}}>No</td>\r\n                    <td style={{padding:'1rem'}}>Question</td>\r\n                    <td style={{padding:'1rem'}}>Failed Answers</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {scores.map((score,index) => {\r\n                    return <tr key={index}>\r\n                        <td style={{paddingLeft:'1rem',paddingRight:'1rem'}}>{index + 1}</td>\r\n                        <td style={{paddingLeft:'1rem',paddingRight:'1rem'}}>{score.questions.join(',')}</td>\r\n                        <td style={{textAlign:'left',paddingLeft:'1rem',paddingRight:'1rem'}}>{score.answers.map(a => a.answer).join(',')}</td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n","import React, {useRef, useState} from \"react\";\r\nimport styles from './App.module.css';\r\nimport ExerciseScreen, {ExerciseWeaknessScreen} from \"./component/ExerciseScreen\";\r\nimport SetupScreen from \"./component/SetupScreen\";\r\nimport {SoundContextProvider} from \"./component/SoundContext\";\r\nimport {AppContextProvider, useAppContext} from \"./AppContext\";\r\nimport SummaryScreen from \"./component/SummaryScreen\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport WeaknessScreen from \"./component/WeaknessScreen\";\r\n\r\nfunction AppDrawer() {\r\n    const [displayAnchor,setDisplayAnchor] = useState(false);\r\n    const {setPage} = useAppContext();\r\n\r\n    const hasConfig = useRef((() => {\r\n        const config = localStorage.getItem('config');\r\n        if(config && config.length > 0){\r\n            return true;\r\n        }\r\n        return false;\r\n    })());\r\n    return <>\r\n        <Drawer anchor={'left'} open={displayAnchor} onClose={() => setDisplayAnchor(false)}>\r\n            <div style={{padding: '1rem', backgroundColor: 'rgba(0,0,0,1)', height: '100%'}}>\r\n                <div className={styles.button} onClick={() => {\r\n                    setPage(1);\r\n                    setDisplayAnchor(false);\r\n                }}>Home</div>\r\n                <div className={styles.button} style={{marginTop: '2rem'}} onClick={() => {\r\n                    setPage(0);\r\n                    setDisplayAnchor(false);\r\n                }}>Change Settings\r\n                </div>\r\n                <div className={styles.button} style={{marginTop: '2rem'}} onClick={() => {\r\n                    setPage(2);\r\n                    setDisplayAnchor(false);\r\n                }}>View Report</div>\r\n                <div className={styles.button} style={{marginTop: '2rem'}} onClick={() => {\r\n                    setPage(3);\r\n                    setDisplayAnchor(false);\r\n                }}>Weakness</div>\r\n            </div>\r\n        </Drawer>\r\n        {hasConfig.current &&\r\n        <div style={{position: 'absolute', top: '0', left: 0}}>\r\n            <IconButton onClick={() => setDisplayAnchor(true)}>\r\n                <MenuIcon style={{color: 'white', fontSize: '2rem'}}/>\r\n            </IconButton>\r\n        </div>\r\n        }\r\n    </>;\r\n}\r\n\r\nexport default function App() {\r\n    return <AppContextProvider>\r\n            {(page) => {\r\n                return (\r\n                    <SoundContextProvider>\r\n                    <div className={styles.main}>\r\n                    {page === 0 && <SetupScreen/>}\r\n                    {page === 1 && <ExerciseScreen/>}\r\n                    {page === 2 && <SummaryScreen/>}\r\n                    {page === 3 && <WeaknessScreen/>}\r\n                    {page === 31 && <ExerciseWeaknessScreen/>}\r\n                    <AppDrawer />\r\n                </div></SoundContextProvider>)\r\n            }}</AppContextProvider>\r\n\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}