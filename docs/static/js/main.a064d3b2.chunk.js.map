{"version":3,"sources":["App.module.css","AppContext.js","component/SoundContext.js","component/ExerciseScreen.js","component/Field.js","component/SetupScreen.js","component/SummaryScreen.js","App.js","index.js"],"names":["module","exports","AppContext","createContext","AppContextProvider","children","useState","config","localStorage","getItem","length","JSON","parse","studentName","totalSums","totalQuestions","pauseBetweenQuestionInMs","setConfig","page","setPage","getSession","sessions","useEffect","sessionTimer","useRef","Provider","value","saveSettings","setItem","stringify","window","location","reload","saveSession","questions","answers","sessionDuration","Date","getTime","current","sums","map","answer","index","session","date","duration","push","markSessionBegin","useAppContext","useContext","SoundContext","numberTimeline","SoundContextProvider","soundRef","playSound","number","delayInMiliseconds","Promise","resolve","startingTime","toString","currentTime","play","ontimeupdate","delayMoreThanASecond","hasReachEnd","hasPlayedMoreThan900ms","pause","delay","setTimeout","load","playSounds","numbers","undefined","a","i","style","display","justifyContent","width","position","textAlign","paddingTop","ref","controls","preload","src","process","type","useSound","generateRandomNumber","result","total","reduce","ac","next","shouldBeNegative","Math","random","nextCandidate","floor","abs","generateQuestionArray","ClickToStart","setSessionRunning","margin","marginTop","padding","background","marginBottom","className","styles","button","onClick","AnswerForm","setTimerRunning","setCurrentQuestion","setCurrentSum","setAnswers","isTrial","currentSum","questionSet","answerRef","timeLogger","focus","flexDirection","action","onSubmit","e","preventDefault","parseInt","target","elements","val","time","handleSubmit","alignItems","fontSize","flexGrow","input","name","QuestionPanel","questionSets","currentQuestion","maxWidth","height","boxShadow","borderRadius","top","left","colors","padZero","ExerciseSession","setupQuestions","timerRunning","sessionRunning","intervalId","setInterval","clearInterval","isLastQuestionInTheSum","currentTotalQuestions","grandTotalQuestions","percentage","round","data","currentClock","setCurrentClock","startTime","timeDate","moment","hours","minutes","seconds","marginRight","animationDuration","dataKey","nameKey","cx","cy","innerRadius","outerRadius","fill","entry","key","stroke","ExerciseScreen","Field","label","description","onValueChange","questionTitle","onChange","toUpperCase","questionDescription","SetupScreen","currentConfigScreen","setCurrentConfigScreen","bottom","backgroundColor","buttonNavigator","state","SummaryScreen","lastSession","correctAnswers","acc","sum","num","minute","leftSecond","format","right","strokeDasharray","AppDrawer","displayAnchor","setDisplayAnchor","hasConfig","Drawer","anchor","open","onClose","IconButton","color","App","main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a064d3b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"App_button__3Wu2Q\",\"buttonNavigator\":\"App_buttonNavigator__3DrKD\",\"main\":\"App_main__3g0VX\",\"input\":\"App_input__coDI0\",\"questionTitle\":\"App_questionTitle__1GdSl\",\"questionDescription\":\"App_questionDescription__1lfpj\"};","import React, {createContext, useContext, useEffect, useRef, useState} from 'react';\r\n\r\nconst AppContext = createContext(null);\r\n\r\n\r\nexport function AppContextProvider({children}){\r\n\r\n    const [config, setConfig] = useState(() => {\r\n        const config = localStorage.getItem('config');\r\n        if (config && config.length > 0) {\r\n            return JSON.parse(config);\r\n        }\r\n        return {\r\n            studentName : 'RAOUL ARDY',\r\n            totalSums : 200,\r\n            totalQuestions : 6,\r\n            pauseBetweenQuestionInMs : 1000\r\n        }\r\n    });\r\n\r\n    const [page, setPage] = useState(0);\r\n\r\n    function getSession(){\r\n        let sessions = localStorage.getItem('sessions');\r\n        if(sessions && sessions.length > 0){\r\n            sessions = JSON.parse(sessions);\r\n        }else{\r\n            sessions = [];\r\n        }\r\n        return sessions;\r\n    }\r\n\r\n    function saveSession(questions,answers){\r\n        const sessionDuration = markSessionEnd();\r\n        const sums = answers.map((answer,index) => {\r\n            return {\r\n                ...answer,\r\n                questions : questions[index]\r\n            };\r\n        });\r\n        const session = {date : new Date(),sums,duration:sessionDuration };\r\n        let sessions = getSession();\r\n        sessions.push(session);\r\n        localStorage.setItem('sessions',JSON.stringify(sessions));\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const config = localStorage.getItem('config');\r\n        if (config && config.length > 0) {\r\n            setConfig(JSON.parse(config));\r\n            setPage(1);\r\n        } else {\r\n            setPage(0);\r\n        }\r\n    }, []);\r\n\r\n    function saveSettings() {\r\n        localStorage.setItem('config', JSON.stringify(config));\r\n        window.location.reload();\r\n    }\r\n\r\n    const sessionTimer = useRef();\r\n    function markSessionBegin(){\r\n        sessionTimer.current = new Date().getTime();\r\n    }\r\n\r\n    function markSessionEnd(){\r\n        return new Date().getTime() - sessionTimer.current;\r\n    }\r\n\r\n    return <AppContext.Provider value={{ setPage,setConfig,config,saveSettings,saveSession,getSession,markSessionBegin,sessionTimer}}>\r\n        {children(page)}\r\n    </AppContext.Provider>\r\n}\r\n\r\nexport function useAppContext(){\r\n    return useContext(AppContext);\r\n}\r\n","import React, {createContext, useContext, useEffect, useRef} from \"react\";\r\nimport {useAppContext} from \"../AppContext\";\r\n\r\nconst SoundContext = createContext(null);\r\n\r\nconst numberTimeline = {\r\n    '-9': 0,\r\n    '-8': 1,\r\n    '-7': 2,\r\n    '-6': 3,\r\n    '-5': 4,\r\n    '-4': 5,\r\n    '-3': 6,\r\n    '-2': 7,\r\n    '-1': 8,\r\n    '1': 9,\r\n    '2': 10,\r\n    '3': 11,\r\n    '4': 12,\r\n    '5': 13,\r\n    '6': 14,\r\n    '7': 15,\r\n    '8': 16,\r\n    '9': 17,\r\n};\r\n\r\nexport function SoundContextProvider({children}) {\r\n    const soundRef = useRef();\r\n    const {config} = useAppContext();\r\n\r\n    function playSound(number,delayInMiliseconds){\r\n        return new Promise((resolve) => {\r\n            const startingTime = numberTimeline[number.toString()];\r\n            soundRef.current.currentTime = startingTime;\r\n            soundRef.current.play();\r\n            soundRef.current.ontimeupdate = () => {\r\n                const delayMoreThanASecond = delayInMiliseconds > 1000;\r\n                const hasReachEnd = soundRef.current.currentTime > 17.4;\r\n                const hasPlayedMoreThan900ms = soundRef.current.currentTime > (startingTime + 0.9);\r\n                if(hasReachEnd || hasPlayedMoreThan900ms){\r\n                    soundRef.current.pause();\r\n                    soundRef.current.ontimeupdate = null;\r\n                    if(delayMoreThanASecond){\r\n                        const delay = (soundRef.current.currentTime - startingTime) * 1000;\r\n                        setTimeout(resolve,delayInMiliseconds - delay,true);\r\n                    }else{\r\n                        resolve(true);\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n    function playSounds(numbers) {\r\n        const delayInMiliseconds = config.pauseBetweenQuestionInMs;\r\n        if (numbers === null || numbers === undefined || numbers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        (async() => {\r\n            for (let i = 0; i < numbers.length; i++) {\r\n                const number = numbers[i];\r\n                await playSound(number,delayInMiliseconds);\r\n            }\r\n        })();\r\n    }\r\n    useEffect(() => {\r\n        soundRef.current.load();\r\n        soundRef.current.pause();\r\n    },[]);\r\n    return <SoundContext.Provider value={{playSounds}}>\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%',\r\n            position: 'absolute',\r\n            textAlign: 'center',\r\n            paddingTop: '1rem'\r\n        }}>\r\n            <audio ref={soundRef} controls preload=\"auto\" >\r\n                <source src={`${process.env.PUBLIC_URL}/audio/mental-math-v2.mp3`} type=\"audio/mpeg\"/>\r\n            </audio>\r\n        </div>\r\n        {children}\r\n    </SoundContext.Provider>\r\n}\r\n\r\nexport function useSound() {\r\n    const {playSounds} = useContext(SoundContext);\r\n    return {playSounds};\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport styles from \"../App.module.css\";\r\nimport {useSound} from \"./SoundContext\";\r\nimport {useAppContext} from \"../AppContext\";\r\nimport {Cell, Pie, PieChart} from \"recharts\";\r\nimport moment from 'moment';\r\n\r\nfunction generateRandomNumber(result) {\r\n    const total = result.reduce((ac, next) => ac + next, 0);\r\n    const shouldBeNegative = Math.random() <= 0.3; // 30 percent chance;\r\n    const nextCandidate = (Math.floor(Math.random() * 9) + 1) * (shouldBeNegative ? -1 : 1);\r\n    if ((total + nextCandidate) > 0 && Math.abs(result[result.length - 1]) !== Math.abs(nextCandidate)) {\r\n        return nextCandidate;\r\n    } else {\r\n        return generateRandomNumber(result);\r\n    }\r\n}\r\n\r\nfunction generateQuestionArray(totalQuestions) {\r\n    const result = [];\r\n    while (result.length < totalQuestions) {\r\n        result.push(generateRandomNumber(result))\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction setupQuestions(totalQuestions, totalSums) {\r\n    const result = [];\r\n    for (let i = 0; i < totalSums; i++) {\r\n        result.push(generateQuestionArray(totalQuestions))\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction handleSubmit({answer, setTimerRunning, setCurrentSum, setCurrentQuestion, setAnswers, timeLogger}) {\r\n    setTimerRunning(false);\r\n    setCurrentSum(val => val + 1);\r\n    setCurrentQuestion(-1);\r\n    const time = new Date().getTime() - timeLogger.current;\r\n    setAnswers((val) => [...val, {answer, time}]);\r\n}\r\n\r\nfunction ClickToStart({studentName, setSessionRunning, numbers}) {\r\n    const {markSessionBegin} = useAppContext();\r\n    const {playSounds} = useSound();\r\n    return <div style={{\r\n        display: 'inline-block',\r\n        margin: 'auto',\r\n        marginTop: '2rem',\r\n        padding: '1rem',\r\n        background: 'rgba(0,0,0,0.5)'\r\n    }}>\r\n        <h1 style={{textAlign: 'center', marginBottom: '5rem'}}>{studentName}</h1>\r\n        <div style={{textAlign: 'center'}}>\r\n            <button className={styles.button} onClick={() => {\r\n                markSessionBegin();\r\n                setSessionRunning(true);\r\n                playSounds(numbers);\r\n            }}>Click Here To Begin Session\r\n            </button>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nfunction AnswerForm({setTimerRunning, setCurrentQuestion, setCurrentSum, setAnswers, isTrial, currentSum, questionSet}) {\r\n    const answerRef = useRef(null);\r\n    const timeLogger = useRef(null);\r\n    const {playSounds} = useSound();\r\n    useEffect(() => {\r\n        timeLogger.current = new Date().getTime();\r\n        answerRef.current.focus();\r\n    }, []);\r\n    return <form style={{\r\n        width: '100%', display: 'flex',\r\n        flexDirection: 'column'\r\n    }} action=\"\"\r\n                 onSubmit={(e) => {\r\n                     e.preventDefault();\r\n                     const answer = parseInt(e.target.elements.answer.value);\r\n                     if (answer >= 0) {\r\n                         handleSubmit({\r\n                             answer,\r\n                             setTimerRunning,\r\n                             setCurrentQuestion,\r\n                             setCurrentSum,\r\n                             setAnswers,\r\n                             timeLogger\r\n                         });\r\n                         playSounds(questionSet[currentSum + 1]);\r\n                     }\r\n                 }}>\r\n\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginTop: '1rem',\r\n            marginBottom: '1rem'\r\n        }}>\r\n            <div style={{textAlign: 'left', fontSize: '2rem'}}>Answer :</div>\r\n            <div style={{flexGrow: '1'}}></div>\r\n            {!isTrial &&\r\n            <button className={styles.button} type={'submit'}>Enter</button>\r\n            }\r\n        </div>\r\n        <input ref={answerRef} className={styles.input} type={'number'} style={{marginBottom: '2rem', fontSize: '8rem'}}\r\n               name={\"answer\"}/>\r\n    </form>;\r\n}\r\n\r\nfunction QuestionPanel({questionSets, currentSum, currentQuestion}) {\r\n    return <div style={{\r\n        fontSize: '18rem',\r\n        position: 'relative',\r\n        margin: 'auto',\r\n        maxWidth: '18rem',\r\n        height: '18rem',\r\n    }}>\r\n        <div style={{\r\n            background: 'rgba(0,0,0,0.5)',\r\n            boxShadow: '0px 0px 80px 10px rgba(0,0,0,1)',\r\n            borderRadius: '20rem', position: 'absolute', top: 0, left: 0, width: '100%', height: '100%'\r\n        }}/>\r\n        <div style={{\r\n            position: 'relative',\r\n            top: '-4rem',\r\n            width: '100%',\r\n            textAlign: 'center'\r\n        }}>{questionSets[currentSum][currentQuestion]}</div>\r\n    </div>;\r\n}\r\n\r\nconst colors = ['rgba(255,255,255,1)', 'rgba(255,255,255,0.5)'];\r\n\r\nfunction padZero(val) {\r\n    return parseInt(val.toString()) <= 9 ? '0' + val : val;\r\n}\r\n\r\nexport function ExerciseSession({isTrial}) {\r\n    const {config, saveSession, setPage, sessionTimer} = useAppContext();\r\n    const {studentName, totalSums, totalQuestions, pauseBetweenQuestionInMs} = config;\r\n    const [questionSets] = useState(setupQuestions(totalQuestions, totalSums));\r\n    const [timerRunning, setTimerRunning] = useState(false);\r\n    const [sessionRunning, setSessionRunning] = useState(false);\r\n    const [currentSum, setCurrentSum] = useState(0);\r\n    const [currentQuestion, setCurrentQuestion] = useState(-1);\r\n    const [answers, setAnswers] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        let intervalId = null;\r\n        if (sessionRunning) {\r\n            if (timerRunning) {\r\n                intervalId = setInterval(() => {\r\n                    setCurrentQuestion((val) => {\r\n                        if (val < totalQuestions) {\r\n                            return val + 1\r\n                        }\r\n                        return val;\r\n                    });\r\n                }, pauseBetweenQuestionInMs);\r\n            } else {\r\n                setTimerRunning(true);\r\n            }\r\n        }\r\n        return () => {\r\n            if (intervalId) {\r\n                clearInterval(intervalId);\r\n            }\r\n        }\r\n    }, [timerRunning, sessionRunning, pauseBetweenQuestionInMs, totalQuestions]);\r\n\r\n    useEffect(() => {\r\n        if (currentSum === totalSums) {\r\n            setSessionRunning(false);\r\n            setTimerRunning(false);\r\n            setCurrentQuestion(-1);\r\n            setCurrentSum(0);\r\n            if (!isTrial) {\r\n                saveSession(questionSets, answers);\r\n                setPage(2);\r\n            }\r\n            setAnswers([]);\r\n        }\r\n    }, [currentSum, totalSums, answers, questionSets, saveSession, setPage, isTrial]);\r\n    const isLastQuestionInTheSum = currentQuestion === totalQuestions;\r\n    const currentTotalQuestions = (currentSum * totalQuestions) + (currentQuestion === -1 ? 0 : currentQuestion);\r\n    const grandTotalQuestions = totalSums * totalQuestions;\r\n    const percentage = Math.round((currentTotalQuestions / grandTotalQuestions) * 100);\r\n    const data = [\r\n        {name: 'complete', value: percentage},\r\n        {name: 'incomplete', value: 100 - percentage}\r\n    ];\r\n\r\n    const [currentClock, setCurrentClock] = useState('');\r\n\r\n    const startTime = sessionTimer.current;\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            if (startTime) {\r\n                const timeDate = new Date().getTime() - startTime;\r\n                const time = moment.duration(timeDate);\r\n                setCurrentClock(`${time.hours()}:${padZero(time.minutes())}:${padZero(time.seconds())}`);\r\n            }\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        }\r\n    }, [startTime]);\r\n\r\n    return (<div style={{maxWidth: '100%', display: 'flex', flexDirection: 'column'}}>\r\n        <div style={{display: 'flex'}}>\r\n            <div style={{flexGrow: '1'}}></div>\r\n            <div style={{position: 'relative',marginTop:'-1rem',marginRight:'-1rem'}}>\r\n                <PieChart width={100} height={100}>\r\n                    <Pie animationDuration={100} data={data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\"\r\n                         innerRadius={40} outerRadius={50} fill=\"#82ca9d\">\r\n                        {\r\n                            data.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={colors[index]} stroke={'none'}/>\r\n                            ))\r\n                        }\r\n                    </Pie>\r\n                </PieChart>\r\n                <div style={{position: 'absolute', top: 40, width: '100%', textAlign: 'center'}}>{currentClock}</div>\r\n            </div>\r\n        </div>\r\n        {!sessionRunning &&\r\n        <ClickToStart studentName={studentName} setSessionRunning={setSessionRunning} numbers={questionSets[0]}/>}\r\n        {sessionRunning && currentSum < totalSums && (\r\n            <div style={{textAlign: 'center'}}>\r\n                {timerRunning && <div>\r\n                    {currentQuestion === -1 && <h1 style={{fontSize: '4rem'}}>Ready !</h1>}\r\n                    {currentQuestion >= 0 && !isLastQuestionInTheSum &&\r\n                    <QuestionPanel questionSets={questionSets} currentSum={currentSum}\r\n                                   currentQuestion={currentQuestion}/>}\r\n                    {isLastQuestionInTheSum &&\r\n                    <AnswerForm setTimerRunning={setTimerRunning} setCurrentQuestion={setCurrentQuestion}\r\n                                setCurrentSum={setCurrentSum} setAnswers={setAnswers} isTrial={isTrial}\r\n                                currentSum={currentSum} questionSet={questionSets}\r\n                    />\r\n                    }\r\n                </div>}\r\n            </div>\r\n        )}\r\n    </div>)\r\n}\r\n\r\nexport default function ExerciseScreen() {\r\n    return <div style={{padding: '2rem', width: '100%'}}>\r\n        <ExerciseSession isTrial={false}/>\r\n    </div>;\r\n}\r\n","import styles from \"../App.module.css\";\r\nimport React from \"react\";\r\n\r\nexport default function Field({label, description, type, value, onValueChange}) {\r\n\r\n    return (<div style={{display: 'flex', flexDirection: 'column'}}>\r\n        <p className={styles.questionTitle}>{label}</p>\r\n        <input type={type} className={styles.input} value={value}\r\n               onChange={(e) => onValueChange(e.target.value.toUpperCase())}\r\n        />\r\n        <p className={styles.questionDescription}>{description}</p>\r\n    </div>)\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Field from \"./Field\";\r\nimport styles from \"../App.module.css\";\r\nimport {useAppContext} from \"../AppContext\";\r\nimport {ExerciseSession} from \"./ExerciseScreen\";\r\n\r\nexport default function SetupScreen() {\r\n    const {config} = useAppContext();\r\n    const {studentName, totalSums, totalQuestions, pauseBetweenQuestionInMs} = config;\r\n    const [currentConfigScreen, setCurrentConfigScreen] = useState(0);\r\n    const {setConfig, saveSettings} = useAppContext();\r\n    return (<div style={{width:'100%'}}>\r\n        <div style={{\r\n            display: 'flex',\r\n            position:'fixed',\r\n            bottom : 0,\r\n            width: '100vw',\r\n            backgroundColor: 'rgba(0,0,0,0.3)'\r\n        }}>\r\n            {currentConfigScreen > 0 &&\r\n            <button className={styles.buttonNavigator}\r\n                    onClick={() => setCurrentConfigScreen((val) => val - 1)}>Back</button>}\r\n            <div style={{flexGrow: '1'}}></div>\r\n            {currentConfigScreen < 5 &&\r\n            <button className={styles.buttonNavigator}\r\n                    onClick={() => setCurrentConfigScreen((val) => val + 1)}>Next</button>\r\n            }\r\n            {currentConfigScreen === 5 &&\r\n            <button className={styles.buttonNavigator}\r\n                    onClick={() => {\r\n                        setConfig({studentName, totalSums, totalQuestions, pauseBetweenQuestionInMs});\r\n                        saveSettings();\r\n                    }}>Save Changes\r\n            </button>\r\n            }\r\n        </div>\r\n\r\n        <div style={{padding: '2rem',width:'100%',background:'rgba(0,0,0,0.5)',boxShadow:'0px 30px 80px 10px rgba(0,0,0,0.7)'}}>\r\n            {currentConfigScreen === 0 &&\r\n            <h1>Mental Math Exercise</h1>\r\n            }\r\n            {currentConfigScreen === 1 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={\"Student name ?\"}\r\n                type={\"text\"}\r\n                value={studentName}\r\n                onValueChange={(val) => setConfig(state => ({...state, studentName: val}))}\r\n                description={\"Your name will be recorded and your historical session will be kept in the device\"}\r\n            />\r\n            </form>\r\n\r\n            }\r\n            {currentConfigScreen === 2 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={`Total sums in each session ?`}\r\n                type={\"number\"}\r\n                value={totalSums}\r\n                onValueChange={(val) => setConfig(state => ({...state, totalSums: parseInt(val)}))}\r\n\r\n                description={\"For competition practice, total sums in a session usually `200`\"}\r\n            /></form>\r\n            }\r\n            {currentConfigScreen === 3 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={`Total questions in each sums ?`}\r\n                type={\"number\"}\r\n                value={totalQuestions}\r\n                onValueChange={(val) => setConfig(state => ({...state, totalQuestions: parseInt(val)}))}\r\n                description={\"For competition practice, recommended total questions in a sum is `6`\"}\r\n            /></form>\r\n            }\r\n            {currentConfigScreen === 4 &&\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setCurrentConfigScreen((val) => val + 1);\r\n            }}>\r\n            <Field\r\n                label={`Pause between question  ?`}\r\n                type={\"number\"}\r\n                value={pauseBetweenQuestionInMs}\r\n                onValueChange={(val) => setConfig(state => ({...state, pauseBetweenQuestionInMs: parseInt(val)}))}\r\n                description={\"For competition practice, recommended pause is `1000` milliseconds (1 second)\"}\r\n            /></form>\r\n            }\r\n            {currentConfigScreen === 5 && <ExerciseSession isTrial={true}/>}\r\n        </div>\r\n    </div>)\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport {useAppContext} from \"../AppContext\";\r\nimport { CartesianGrid, YAxis, ResponsiveContainer, BarChart, Bar} from 'recharts';\r\nimport moment from 'moment';\r\n\r\nexport default function SummaryScreen() {\r\n    const {getSession} = useAppContext();\r\n    const sessions = useRef(getSession());\r\n    if(!(sessions.current && sessions.current.length > 0)){\r\n        return <div style={{marginTop:'5rem'}}>No Report Yet</div>\r\n    }\r\n    const lastSession = sessions.current[sessions.current.length - 1];\r\n    const correctAnswers = lastSession.sums.reduce((acc, sum) => {\r\n        const total = sum.questions.reduce((acc, num) => acc + num, 0);\r\n        return sum.answer === total ? ++acc : acc;\r\n    }, 0);\r\n    const percentage = Math.round((correctAnswers / lastSession.sums.length) * 100);\r\n    const duration = lastSession.duration;\r\n    const seconds = Math.round(duration/1000);\r\n    const minute = Math.floor(seconds / 60);\r\n    const leftSecond = seconds % 60;\r\n    return <div style={{fontSize: '1.5rem',width:'100%',padding:'1rem',paddingTop:'3rem',background:'rgba(0,0,0,0.4)',boxShadow:'0px 30px 30px 0px rgba(0,0,0,0.5)'}}>\r\n        <table style={{fontSize:'1rem'}}>\r\n            <tr>\r\n                <td>Date</td>\r\n                <td>{moment(new Date(lastSession.date)).format('DD MMM YYYY HH:mm:ss')}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Total Sums</td>\r\n                <td>{lastSession.sums.length}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Total Questions</td>\r\n                <td>{lastSession.sums.length * lastSession.sums[0].questions.length}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Score</td>\r\n                <td>{percentage} %</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Completion time</td>\r\n                <td>{minute} Min : {leftSecond < 9 ? `0${leftSecond}`:leftSecond} Sec</td>\r\n            </tr>\r\n        </table>\r\n\r\n        <div style={{width:'100%',height:300}}>\r\n        <ResponsiveContainer>\r\n            <BarChart  data={lastSession.sums} margin={{\r\n                top: 20, right: 20, left: 20, bottom: 20,\r\n            }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <YAxis />\r\n                <Bar dataKey=\"time\" fill=\"rgba(255,255,255,0.9)\" />\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {useRef, useState} from \"react\";\r\nimport styles from './App.module.css';\r\nimport ExerciseScreen from \"./component/ExerciseScreen\";\r\nimport SetupScreen from \"./component/SetupScreen\";\r\nimport {SoundContextProvider} from \"./component/SoundContext\";\r\nimport {AppContextProvider, useAppContext} from \"./AppContext\";\r\nimport SummaryScreen from \"./component/SummaryScreen\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nfunction AppDrawer() {\r\n    const [displayAnchor,setDisplayAnchor] = useState(false);\r\n    const {setPage} = useAppContext();\r\n\r\n    const hasConfig = useRef((() => {\r\n        const config = localStorage.getItem('config');\r\n        if(config && config.length > 0){\r\n            return true;\r\n        }\r\n        return false;\r\n    })());\r\n    return <>\r\n        <Drawer anchor={'left'} open={displayAnchor} onClose={() => setDisplayAnchor(false)}>\r\n            <div style={{padding: '1rem', backgroundColor: 'rgba(0,0,0,1)', height: '100%'}}>\r\n                <div className={styles.button} onClick={() => {\r\n                    setPage(1);\r\n                    setDisplayAnchor(false);\r\n                }}>Home</div>\r\n                <div className={styles.button} style={{marginTop: '2rem'}} onClick={() => {\r\n                    setPage(0);\r\n                    setDisplayAnchor(false);\r\n                }}>Change Settings\r\n                </div>\r\n                <div className={styles.button} style={{marginTop: '2rem'}} onClick={() => {\r\n                    setPage(2);\r\n                    setDisplayAnchor(false)\r\n                }}>View Report</div>\r\n            </div>\r\n        </Drawer>\r\n        {hasConfig.current &&\r\n        <div style={{position: 'absolute', top: '0', left: 0}}>\r\n            <IconButton onClick={() => setDisplayAnchor(true)}>\r\n                <MenuIcon style={{color: 'white', fontSize: '2rem'}}/>\r\n            </IconButton>\r\n        </div>\r\n        }\r\n    </>;\r\n}\r\n\r\nexport default function App() {\r\n    return <AppContextProvider>\r\n            {(page) => {\r\n                return (\r\n                    <SoundContextProvider>\r\n                    <div className={styles.main}>\r\n                    {page === 0 && <SetupScreen/>}\r\n                    {page === 1 && <ExerciseScreen/>}\r\n                    {page === 2 && <SummaryScreen/>}\r\n                    {<AppDrawer />}\r\n                </div></SoundContextProvider>)\r\n            }}</AppContextProvider>\r\n\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}